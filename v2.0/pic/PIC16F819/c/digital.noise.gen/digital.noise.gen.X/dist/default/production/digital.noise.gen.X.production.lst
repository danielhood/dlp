

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Mar 27 20:02:58 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F819
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     	;# 
    37  0001                     	;# 
    38  0002                     	;# 
    39  0003                     	;# 
    40  0004                     	;# 
    41  0005                     	;# 
    42  0006                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  000E                     	;# 
    49  000F                     	;# 
    50  0010                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0013                     	;# 
    54  0014                     	;# 
    55  0015                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  001E                     	;# 
    60  001F                     	;# 
    61  0081                     	;# 
    62  0085                     	;# 
    63  0086                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  008F                     	;# 
    68  0090                     	;# 
    69  0092                     	;# 
    70  0093                     	;# 
    71  0094                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  010F                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80                           
    81                           	psect	idataCOMMON
    82  06E7                     __pidataCOMMON:	
    83                           
    84                           ;initializer for xorgen@xx
    85  06E7  348F               	retlw	143
    86                           
    87                           ;initializer for xorgen@y
    88  06E8  342B               	retlw	43
    89                           
    90                           	psect	idataBANK0
    91  06E2                     __pidataBANK0:	
    92                           
    93                           ;initializer for xorgen@u
    94  06E2  3470               	retlw	112
    95                           
    96                           ;initializer for xorgen@v
    97  06E3  345D               	retlw	93
    98                           
    99                           ;initializer for xorgen@w
   100  06E4  34F4               	retlw	244
   101                           
   102                           ;initializer for xorgen@x
   103  06E5  3465               	retlw	101
   104                           
   105                           ;initializer for xorgen@z
   106  06E6  34C3               	retlw	195
   107                           
   108                           	psect	idataBANK1
   109  06CD                     __pidataBANK1:	
   110                           
   111                           ;initializer for _freq
   112  06CD  3400               	retlw	0
   113  06CE  34DC               	retlw	220
   114  06CF  3443               	retlw	67
   115                           
   116                           ;initializer for _sample_rate
   117                           ;main.c: 17: __config("__CONFIG", "pic", "FOSC_HS & WDTE_OFF & PWRTE_ON & MCLRE_ON & BOR
      +                          EN_ON & LVP_OFF & CPD_OFF & CP_OFF & WRT_OFF & DEBUG_OFF & CCPMX_RB3");
   118                           ;main.c: 19: static unsigned int duty;
   119                           ;main.c: 20: static unsigned int delta;
   120                           ;main.c: 22: static double freq = 440;
   121  06D0  3497               	retlw	151
   122  06D1  3498               	retlw	152
   123  06D2  3446               	retlw	70
   124                           
   125                           ;initializer for _duty_max
   126  06D3  34FF               	retlw	255
   127  06D4  3403               	retlw	3
   128                           
   129                           ;initializer for _duty_max2
   130  06D5  34F0               	retlw	240
   131  06D6  343F               	retlw	63
   132                           
   133                           ;initializer for xorgen@s
   134  06D7  3491               	retlw	145
   135                           
   136                           	psect	nvBANK1
   137  00C9                     __pnvBANK1:	
   138  00C9                     _delta:	
   139  00C9                     	ds	2
   140  00CB                     _duty:	
   141  00CB                     	ds	2
   142  0015                     _CCPR1L	set	21
   143  0005                     _PORTA	set	5
   144  00BA                     _CCP1M2	set	186
   145  00BB                     _CCP1M3	set	187
   146  00BD                     _CCP1X	set	189
   147  00BC                     _CCP1Y	set	188
   148  005F                     _GIE	set	95
   149  0090                     _T2CKPS0	set	144
   150  0091                     _T2CKPS1	set	145
   151  005D                     _TMR0IE	set	93
   152  005A                     _TMR0IF	set	90
   153  0092                     _TMR2ON	set	146
   154  009F                     _ADCON1	set	159
   155  0092                     _PR2	set	146
   156  0085                     _TRISA	set	133
   157  0086                     _TRISB	set	134
   158  047C                     _IRCF0	set	1148
   159  047D                     _IRCF1	set	1149
   160  047E                     _IRCF2	set	1150
   161  040D                     _T0CS	set	1037
   162                           
   163                           ; #config settings
   164  0000                     
   165                           	psect	cinit
   166  0011                     start_initialization:	
   167  0011                     __initialization:	
   168                           
   169                           ; Clear objects allocated to BANK1
   170  0011  1683               	bsf	3,5	;RP0=1, select bank1
   171  0012  1303               	bcf	3,6	;RP1=0, select bank1
   172  0013  01CD               	clrf	__pbssBANK1& (0+127)
   173  0014  01CE               	clrf	(__pbssBANK1+1)& (0+127)
   174                           
   175                           ; Initialize objects allocated to BANK1
   176  0015  26CD               	fcall	__pidataBANK1	;fetch initializer
   177  0016  00BE               	movwf	__pdataBANK1& (0+127)
   178  0017  26CE               	fcall	__pidataBANK1+1	;fetch initializer
   179  0018  00BF               	movwf	(__pdataBANK1+1)& (0+127)
   180  0019  26CF               	fcall	__pidataBANK1+2	;fetch initializer
   181  001A  00C0               	movwf	(__pdataBANK1+2)& (0+127)
   182  001B  26D0               	fcall	__pidataBANK1+3	;fetch initializer
   183  001C  00C1               	movwf	(__pdataBANK1+3)& (0+127)
   184  001D  26D1               	fcall	__pidataBANK1+4	;fetch initializer
   185  001E  00C2               	movwf	(__pdataBANK1+4)& (0+127)
   186  001F  26D2               	fcall	__pidataBANK1+5	;fetch initializer
   187  0020  00C3               	movwf	(__pdataBANK1+5)& (0+127)
   188  0021  26D3               	fcall	__pidataBANK1+6	;fetch initializer
   189  0022  00C4               	movwf	(__pdataBANK1+6)& (0+127)
   190  0023  26D4               	fcall	__pidataBANK1+7	;fetch initializer
   191  0024  00C5               	movwf	(__pdataBANK1+7)& (0+127)
   192  0025  26D5               	fcall	__pidataBANK1+8	;fetch initializer
   193  0026  00C6               	movwf	(__pdataBANK1+8)& (0+127)
   194  0027  26D6               	fcall	__pidataBANK1+9	;fetch initializer
   195  0028  00C7               	movwf	(__pdataBANK1+9)& (0+127)
   196  0029  26D7               	fcall	__pidataBANK1+10	;fetch initializer
   197  002A  00C8               	movwf	(__pdataBANK1+10)& (0+127)
   198                           
   199                           ; Initialize objects allocated to BANK0
   200  002B  1283               	bcf	3,5	;RP0=0, select bank0
   201  002C  1303               	bcf	3,6	;RP1=0, select bank0
   202  002D  26E2               	fcall	__pidataBANK0	;fetch initializer
   203  002E  00E6               	movwf	__pdataBANK0& (0+127)
   204  002F  26E3               	fcall	__pidataBANK0+1	;fetch initializer
   205  0030  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   206  0031  26E4               	fcall	__pidataBANK0+2	;fetch initializer
   207  0032  00E8               	movwf	(__pdataBANK0+2)& (0+127)
   208  0033  26E5               	fcall	__pidataBANK0+3	;fetch initializer
   209  0034  00E9               	movwf	(__pdataBANK0+3)& (0+127)
   210  0035  26E6               	fcall	__pidataBANK0+4	;fetch initializer
   211  0036  00EA               	movwf	(__pdataBANK0+4)& (0+127)
   212                           
   213                           ; Initialize objects allocated to COMMON
   214  0037  26E7               	fcall	__pidataCOMMON	;fetch initializer
   215  0038  00FC               	movwf	__pdataCOMMON& (0+127)
   216  0039  26E8               	fcall	__pidataCOMMON+1	;fetch initializer
   217  003A  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   218  003B                     end_of_initialization:	
   219                           ;End of C runtime variable initialization code
   220                           
   221  003B                     __end_of__initialization:	
   222  003B  0183               	clrf	3
   223  003C  2AE7               	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	dataCOMMON
   226  007C                     __pdataCOMMON:	
   227  007C                     xorgen@xx:	
   228  007C                     	ds	1
   229  007D                     xorgen@y:	
   230  007D                     	ds	1
   231                           
   232                           	psect	dataBANK0
   233  0066                     __pdataBANK0:	
   234  0066                     xorgen@u:	
   235  0066                     	ds	1
   236  0067                     xorgen@v:	
   237  0067                     	ds	1
   238  0068                     xorgen@w:	
   239  0068                     	ds	1
   240  0069                     xorgen@x:	
   241  0069                     	ds	1
   242  006A                     xorgen@z:	
   243  006A                     	ds	1
   244                           
   245                           	psect	bssBANK1
   246  00CD                     __pbssBANK1:	
   247  00CD                     _errno:	
   248  00CD                     	ds	2
   249                           
   250                           	psect	dataBANK1
   251  00BE                     __pdataBANK1:	
   252  00BE                     _freq:	
   253  00BE                     	ds	3
   254  00C1                     _sample_rate:	
   255  00C1                     	ds	3
   256  00C4                     _duty_max:	
   257  00C4                     	ds	2
   258  00C6                     _duty_max2:	
   259  00C6                     	ds	2
   260  00C8                     xorgen@s:	
   261  00C8                     	ds	1
   262                           
   263                           	psect	cstackBANK1
   264  00A0                     __pcstackBANK1:	
   265  00A0                     trunc@i:	
   266                           
   267                           ; 3 bytes @ 0x0
   268  00A0                     	ds	3
   269  00A3                     trunc@expon:	
   270                           
   271                           ; 2 bytes @ 0x3
   272  00A3                     	ds	2
   273  00A5                     ?___ftneg:	
   274  00A5                     ___ftneg@f1:	
   275                           ; 3 bytes @ 0x5
   276                           
   277                           
   278                           ; 3 bytes @ 0x5
   279  00A5                     	ds	3
   280  00A8                     ?___ftadd:	
   281  00A8                     ___ftadd@f1:	
   282                           ; 3 bytes @ 0x8
   283                           
   284                           
   285                           ; 3 bytes @ 0x8
   286  00A8                     	ds	3
   287  00AB                     ___ftadd@f2:	
   288                           
   289                           ; 3 bytes @ 0xB
   290  00AB                     	ds	3
   291  00AE                     ??___ftadd:	
   292                           
   293                           ; 1 bytes @ 0xE
   294  00AE                     	ds	4
   295  00B2                     ___ftadd@sign:	
   296                           
   297                           ; 1 bytes @ 0x12
   298  00B2                     	ds	1
   299  00B3                     ___ftadd@exp2:	
   300                           
   301                           ; 1 bytes @ 0x13
   302  00B3                     	ds	1
   303  00B4                     ___ftadd@exp1:	
   304                           
   305                           ; 1 bytes @ 0x14
   306  00B4                     	ds	1
   307  00B5                     ?_round:	
   308  00B5                     round@x:	
   309                           ; 3 bytes @ 0x15
   310                           
   311                           
   312                           ; 3 bytes @ 0x15
   313  00B5                     	ds	3
   314  00B8                     round@f:	
   315                           
   316                           ; 3 bytes @ 0x18
   317  00B8                     	ds	3
   318  00BB                     _main$513:	
   319                           
   320                           ; 3 bytes @ 0x1B
   321  00BB                     	ds	3
   322                           
   323                           	psect	cstackCOMMON
   324  0070                     __pcstackCOMMON:	
   325  0070                     ?_main:	
   326  0070                     ?_xorgen:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_advance_wave:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_isr:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?___bmul:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?i1_update_duty:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ___bmul@multiplicand:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     i1update_duty@value:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 2 bytes @ 0x0
   349  0070                     	ds	1
   350  0071                     ??___bmul:	
   351                           
   352                           ; 1 bytes @ 0x1
   353  0071                     	ds	1
   354  0072                     ??i1_update_duty:	
   355  0072                     ___bmul@product:	
   356                           ; 1 bytes @ 0x2
   357                           
   358                           
   359                           ; 1 bytes @ 0x2
   360  0072                     	ds	1
   361  0073                     ___bmul@multiplier:	
   362                           
   363                           ; 1 bytes @ 0x3
   364  0073                     	ds	1
   365  0074                     ??_xorgen:	
   366                           
   367                           ; 1 bytes @ 0x4
   368  0074                     	ds	4
   369  0078                     _xorgen$514:	
   370                           
   371                           ; 1 bytes @ 0x8
   372  0078                     	ds	1
   373  0079                     xorgen@t:	
   374                           
   375                           ; 1 bytes @ 0x9
   376  0079                     	ds	1
   377  007A                     ??_advance_wave:	
   378                           
   379                           ; 1 bytes @ 0xA
   380  007A                     	ds	2
   381                           
   382                           	psect	cstackBANK0
   383  0020                     __pcstackBANK0:	
   384  0020                     ??_isr:	
   385                           
   386                           ; 1 bytes @ 0x0
   387  0020                     	ds	4
   388  0024                     ?_update_duty:	
   389  0024                     ?___ftpack:	
   390                           ; 1 bytes @ 0x4
   391                           
   392  0024                     ?_frexp:	
   393                           ; 3 bytes @ 0x4
   394                           
   395  0024                     update_duty@value:	
   396                           ; 3 bytes @ 0x4
   397                           
   398  0024                     ___ftpack@arg:	
   399                           ; 2 bytes @ 0x4
   400                           
   401  0024                     frexp@value:	
   402                           ; 3 bytes @ 0x4
   403                           
   404                           
   405                           ; 3 bytes @ 0x4
   406  0024                     	ds	2
   407  0026                     ??_update_duty:	
   408                           
   409                           ; 1 bytes @ 0x6
   410  0026                     	ds	1
   411  0027                     ___ftpack@exp:	
   412  0027                     frexp@eptr:	
   413                           ; 1 bytes @ 0x7
   414                           
   415                           
   416                           ; 1 bytes @ 0x7
   417  0027                     	ds	1
   418  0028                     ??_frexp:	
   419  0028                     ___ftpack@sign:	
   420                           ; 1 bytes @ 0x8
   421                           
   422                           
   423                           ; 1 bytes @ 0x8
   424  0028                     	ds	1
   425  0029                     ??___ftpack:	
   426                           
   427                           ; 1 bytes @ 0x9
   428  0029                     	ds	3
   429  002C                     ?___ftdiv:	
   430  002C                     ?___lwtoft:	
   431                           ; 3 bytes @ 0xC
   432                           
   433  002C                     ___lwtoft@c:	
   434                           ; 3 bytes @ 0xC
   435                           
   436  002C                     ___ftdiv@f2:	
   437                           ; 2 bytes @ 0xC
   438                           
   439                           
   440                           ; 3 bytes @ 0xC
   441  002C                     	ds	3
   442  002F                     ??___lwtoft:	
   443  002F                     ___ftdiv@f1:	
   444                           ; 1 bytes @ 0xF
   445                           
   446                           
   447                           ; 3 bytes @ 0xF
   448  002F                     	ds	3
   449  0032                     ??___ftdiv:	
   450                           
   451                           ; 1 bytes @ 0x12
   452  0032                     	ds	4
   453  0036                     ___ftdiv@cntr:	
   454                           
   455                           ; 1 bytes @ 0x16
   456  0036                     	ds	1
   457  0037                     ___ftdiv@f3:	
   458                           
   459                           ; 3 bytes @ 0x17
   460  0037                     	ds	3
   461  003A                     ___ftdiv@exp:	
   462                           
   463                           ; 1 bytes @ 0x1A
   464  003A                     	ds	1
   465  003B                     ___ftdiv@sign:	
   466                           
   467                           ; 1 bytes @ 0x1B
   468  003B                     	ds	1
   469  003C                     ?___ftmul:	
   470  003C                     ___ftmul@f1:	
   471                           ; 3 bytes @ 0x1C
   472                           
   473                           
   474                           ; 3 bytes @ 0x1C
   475  003C                     	ds	3
   476  003F                     ___ftmul@f2:	
   477                           
   478                           ; 3 bytes @ 0x1F
   479  003F                     	ds	3
   480  0042                     ??___ftmul:	
   481                           
   482                           ; 1 bytes @ 0x22
   483  0042                     	ds	4
   484  0046                     ___ftmul@exp:	
   485                           
   486                           ; 1 bytes @ 0x26
   487  0046                     	ds	1
   488  0047                     ___ftmul@f3_as_product:	
   489                           
   490                           ; 3 bytes @ 0x27
   491  0047                     	ds	3
   492  004A                     ___ftmul@cntr:	
   493                           
   494                           ; 1 bytes @ 0x2A
   495  004A                     	ds	1
   496  004B                     ___ftmul@sign:	
   497                           
   498                           ; 1 bytes @ 0x2B
   499  004B                     	ds	1
   500  004C                     ?___fttol:	
   501  004C                     ___fttol@f1:	
   502                           ; 4 bytes @ 0x2C
   503                           
   504                           
   505                           ; 3 bytes @ 0x2C
   506  004C                     	ds	4
   507  0050                     ??___fttol:	
   508                           
   509                           ; 1 bytes @ 0x30
   510  0050                     	ds	4
   511  0054                     ___fttol@sign1:	
   512                           
   513                           ; 1 bytes @ 0x34
   514  0054                     	ds	1
   515  0055                     ___fttol@lval:	
   516                           
   517                           ; 4 bytes @ 0x35
   518  0055                     	ds	4
   519  0059                     ___fttol@exp1:	
   520                           
   521                           ; 1 bytes @ 0x39
   522  0059                     	ds	1
   523  005A                     ?___altoft:	
   524  005A                     ___altoft@c:	
   525                           ; 3 bytes @ 0x3A
   526                           
   527                           
   528                           ; 4 bytes @ 0x3A
   529  005A                     	ds	4
   530  005E                     ??___altoft:	
   531                           
   532                           ; 1 bytes @ 0x3E
   533  005E                     	ds	2
   534  0060                     ___altoft@exp:	
   535                           
   536                           ; 1 bytes @ 0x40
   537  0060                     	ds	1
   538  0061                     ___altoft@sign:	
   539                           
   540                           ; 1 bytes @ 0x41
   541  0061                     	ds	1
   542  0062                     ?_trunc:	
   543  0062                     trunc@x:	
   544                           ; 3 bytes @ 0x42
   545                           
   546                           
   547                           ; 3 bytes @ 0x42
   548  0062                     	ds	3
   549  0065                     ??_trunc:	
   550                           
   551                           ; 1 bytes @ 0x45
   552  0065                     	ds	1
   553  0066                     ??_round:	
   554  0066                     ??_main:	
   555                           ; 1 bytes @ 0x46
   556                           
   557  0066                     ??___ftneg:	
   558                           ; 1 bytes @ 0x46
   559                           
   560                           
   561                           	psect	maintext
   562  02E7                     __pmaintext:	
   563                           ; 1 bytes @ 0x46
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 43 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : B00/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   583 ;;      Params:         0       0       0       0
   584 ;;      Locals:         0       0       3       0
   585 ;;      Temps:          0       0       0       0
   586 ;;      Totals:         0       0       3       0
   587 ;;Total ram usage:        3 bytes
   588 ;; Hardware stack levels required when called:    8
   589 ;; This function calls:
   590 ;;		___ftdiv
   591 ;;		___ftmul
   592 ;;		___fttol
   593 ;;		___lwtoft
   594 ;;		_round
   595 ;;		_update_duty
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           
   602                           ;psect for function _main
   603  02E7                     _main:	
   604                           
   605                           ;main.c: 44: duty = duty_max2;
   606                           
   607                           ;incstack = 0
   608                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   609  02E7  1683               	bsf	3,5	;RP0=1, select bank1
   610  02E8  1303               	bcf	3,6	;RP1=0, select bank1
   611  02E9  0847               	movf	(_duty_max2+1)^(0+128),w
   612  02EA  00CC               	movwf	(_duty+1)^(0+128)
   613  02EB  0846               	movf	_duty_max2^(0+128),w
   614  02EC  00CB               	movwf	_duty^(0+128)
   615                           
   616                           ;main.c: 48: delta = (unsigned int)round(freq/sample_rate*(duty_max2+1));
   617  02ED  083E               	movf	_freq^(0+128),w
   618  02EE  1283               	bcf	3,5	;RP0=0, select bank0
   619  02EF  1303               	bcf	3,6	;RP1=0, select bank0
   620  02F0  00AF               	movwf	___ftdiv@f1
   621  02F1  1683               	bsf	3,5	;RP0=1, select bank1
   622  02F2  1303               	bcf	3,6	;RP1=0, select bank1
   623  02F3  083F               	movf	(_freq+1)^(0+128),w
   624  02F4  1283               	bcf	3,5	;RP0=0, select bank0
   625  02F5  1303               	bcf	3,6	;RP1=0, select bank0
   626  02F6  00B0               	movwf	___ftdiv@f1+1
   627  02F7  1683               	bsf	3,5	;RP0=1, select bank1
   628  02F8  1303               	bcf	3,6	;RP1=0, select bank1
   629  02F9  0840               	movf	(_freq+2)^(0+128),w
   630  02FA  1283               	bcf	3,5	;RP0=0, select bank0
   631  02FB  1303               	bcf	3,6	;RP1=0, select bank0
   632  02FC  00B1               	movwf	___ftdiv@f1+2
   633  02FD  1683               	bsf	3,5	;RP0=1, select bank1
   634  02FE  1303               	bcf	3,6	;RP1=0, select bank1
   635  02FF  0841               	movf	_sample_rate^(0+128),w
   636  0300  1283               	bcf	3,5	;RP0=0, select bank0
   637  0301  1303               	bcf	3,6	;RP1=0, select bank0
   638  0302  00AC               	movwf	___ftdiv@f2
   639  0303  1683               	bsf	3,5	;RP0=1, select bank1
   640  0304  1303               	bcf	3,6	;RP1=0, select bank1
   641  0305  0842               	movf	(_sample_rate+1)^(0+128),w
   642  0306  1283               	bcf	3,5	;RP0=0, select bank0
   643  0307  1303               	bcf	3,6	;RP1=0, select bank0
   644  0308  00AD               	movwf	___ftdiv@f2+1
   645  0309  1683               	bsf	3,5	;RP0=1, select bank1
   646  030A  1303               	bcf	3,6	;RP1=0, select bank1
   647  030B  0843               	movf	(_sample_rate+2)^(0+128),w
   648  030C  1283               	bcf	3,5	;RP0=0, select bank0
   649  030D  1303               	bcf	3,6	;RP1=0, select bank0
   650  030E  00AE               	movwf	___ftdiv@f2+2
   651  030F  2231               	fcall	___ftdiv
   652  0310  1283               	bcf	3,5	;RP0=0, select bank0
   653  0311  1303               	bcf	3,6	;RP1=0, select bank0
   654  0312  082C               	movf	?___ftdiv,w
   655  0313  00BF               	movwf	___ftmul@f2
   656  0314  082D               	movf	?___ftdiv+1,w
   657  0315  00C0               	movwf	___ftmul@f2+1
   658  0316  082E               	movf	?___ftdiv+2,w
   659  0317  00C1               	movwf	___ftmul@f2+2
   660  0318  1683               	bsf	3,5	;RP0=1, select bank1
   661  0319  1303               	bcf	3,6	;RP1=0, select bank1
   662  031A  0846               	movf	_duty_max2^(0+128),w
   663  031B  3E01               	addlw	1
   664  031C  1283               	bcf	3,5	;RP0=0, select bank0
   665  031D  1303               	bcf	3,6	;RP1=0, select bank0
   666  031E  00AC               	movwf	___lwtoft@c
   667  031F  1683               	bsf	3,5	;RP0=1, select bank1
   668  0320  1303               	bcf	3,6	;RP1=0, select bank1
   669  0321  0847               	movf	(_duty_max2+1)^(0+128),w
   670  0322  1803               	skipnc
   671  0323  3E01               	addlw	1
   672  0324  3E00               	addlw	0
   673  0325  1283               	bcf	3,5	;RP0=0, select bank0
   674  0326  1303               	bcf	3,6	;RP1=0, select bank0
   675  0327  00AD               	movwf	___lwtoft@c+1
   676  0328  267F               	fcall	___lwtoft
   677  0329  1283               	bcf	3,5	;RP0=0, select bank0
   678  032A  1303               	bcf	3,6	;RP1=0, select bank0
   679  032B  082C               	movf	?___lwtoft,w
   680  032C  00BC               	movwf	___ftmul@f1
   681  032D  082D               	movf	?___lwtoft+1,w
   682  032E  00BD               	movwf	___ftmul@f1+1
   683  032F  082E               	movf	?___lwtoft+2,w
   684  0330  00BE               	movwf	___ftmul@f1+2
   685  0331  2160               	fcall	___ftmul
   686  0332  1283               	bcf	3,5	;RP0=0, select bank0
   687  0333  1303               	bcf	3,6	;RP1=0, select bank0
   688  0334  083C               	movf	?___ftmul,w
   689  0335  1683               	bsf	3,5	;RP0=1, select bank1
   690  0336  1303               	bcf	3,6	;RP1=0, select bank1
   691  0337  00B5               	movwf	round@x^(0+128)
   692  0338  1283               	bcf	3,5	;RP0=0, select bank0
   693  0339  1303               	bcf	3,6	;RP1=0, select bank0
   694  033A  083D               	movf	?___ftmul+1,w
   695  033B  1683               	bsf	3,5	;RP0=1, select bank1
   696  033C  1303               	bcf	3,6	;RP1=0, select bank1
   697  033D  00B6               	movwf	(round@x+1)^(0+128)
   698  033E  1283               	bcf	3,5	;RP0=0, select bank0
   699  033F  1303               	bcf	3,6	;RP1=0, select bank0
   700  0340  083E               	movf	?___ftmul+2,w
   701  0341  1683               	bsf	3,5	;RP0=1, select bank1
   702  0342  1303               	bcf	3,6	;RP1=0, select bank1
   703  0343  00B7               	movwf	(round@x+2)^(0+128)
   704  0344  2421               	fcall	_round
   705  0345  1683               	bsf	3,5	;RP0=1, select bank1
   706  0346  1303               	bcf	3,6	;RP1=0, select bank1
   707  0347  0835               	movf	?_round^(0+128),w
   708  0348  00BB               	movwf	_main$513^(0+128)
   709  0349  0836               	movf	(?_round+1)^(0+128),w
   710  034A  00BC               	movwf	(_main$513+1)^(0+128)
   711  034B  0837               	movf	(?_round+2)^(0+128),w
   712  034C  00BD               	movwf	(_main$513+2)^(0+128)
   713                           
   714                           ;main.c: 48: delta = (unsigned int)round(freq/sample_rate*(duty_max2+1));
   715  034D  083B               	movf	_main$513^(0+128),w
   716  034E  1283               	bcf	3,5	;RP0=0, select bank0
   717  034F  1303               	bcf	3,6	;RP1=0, select bank0
   718  0350  00CC               	movwf	___fttol@f1
   719  0351  1683               	bsf	3,5	;RP0=1, select bank1
   720  0352  1303               	bcf	3,6	;RP1=0, select bank1
   721  0353  083C               	movf	(_main$513+1)^(0+128),w
   722  0354  1283               	bcf	3,5	;RP0=0, select bank0
   723  0355  1303               	bcf	3,6	;RP1=0, select bank0
   724  0356  00CD               	movwf	___fttol@f1+1
   725  0357  1683               	bsf	3,5	;RP0=1, select bank1
   726  0358  1303               	bcf	3,6	;RP1=0, select bank1
   727  0359  083D               	movf	(_main$513+2)^(0+128),w
   728  035A  1283               	bcf	3,5	;RP0=0, select bank0
   729  035B  1303               	bcf	3,6	;RP1=0, select bank0
   730  035C  00CE               	movwf	___fttol@f1+2
   731  035D  2393               	fcall	___fttol
   732  035E  1283               	bcf	3,5	;RP0=0, select bank0
   733  035F  1303               	bcf	3,6	;RP1=0, select bank0
   734  0360  084D               	movf	?___fttol+1,w
   735  0361  1683               	bsf	3,5	;RP0=1, select bank1
   736  0362  1303               	bcf	3,6	;RP1=0, select bank1
   737  0363  00CA               	movwf	(_delta+1)^(0+128)
   738  0364  1283               	bcf	3,5	;RP0=0, select bank0
   739  0365  1303               	bcf	3,6	;RP1=0, select bank0
   740  0366  084C               	movf	?___fttol,w
   741  0367  1683               	bsf	3,5	;RP0=1, select bank1
   742  0368  1303               	bcf	3,6	;RP1=0, select bank1
   743  0369  00C9               	movwf	_delta^(0+128)
   744                           
   745                           ;main.c: 51: IRCF0 = 1;
   746  036A  160F               	bsf	15,4	;volatile
   747                           
   748                           ;main.c: 52: IRCF1 = 1;
   749  036B  168F               	bsf	15,5	;volatile
   750                           
   751                           ;main.c: 53: IRCF2 = 1;
   752  036C  170F               	bsf	15,6	;volatile
   753                           
   754                           ;main.c: 56: ADCON1 = 0x06;
   755  036D  3006               	movlw	6
   756  036E  009F               	movwf	31	;volatile
   757                           
   758                           ;main.c: 57: TRISA = 0;
   759  036F  0185               	clrf	5	;volatile
   760                           
   761                           ;main.c: 58: PORTA = 0b01010001;
   762  0370  3051               	movlw	81
   763  0371  1283               	bcf	3,5	;RP0=0, select bank0
   764  0372  1303               	bcf	3,6	;RP1=0, select bank0
   765  0373  0085               	movwf	5	;volatile
   766                           
   767                           ;main.c: 61: PR2 = 0xFF;
   768  0374  30FF               	movlw	255
   769  0375  1683               	bsf	3,5	;RP0=1, select bank1
   770  0376  1303               	bcf	3,6	;RP1=0, select bank1
   771  0377  0092               	movwf	18	;volatile
   772                           
   773                           ;main.c: 62: update_duty(duty);
   774  0378  084C               	movf	(_duty+1)^(0+128),w
   775  0379  1283               	bcf	3,5	;RP0=0, select bank0
   776  037A  1303               	bcf	3,6	;RP1=0, select bank0
   777  037B  00A5               	movwf	update_duty@value+1
   778  037C  1683               	bsf	3,5	;RP0=1, select bank1
   779  037D  1303               	bcf	3,6	;RP1=0, select bank1
   780  037E  084B               	movf	_duty^(0+128),w
   781  037F  1283               	bcf	3,5	;RP0=0, select bank0
   782  0380  1303               	bcf	3,6	;RP1=0, select bank0
   783  0381  00A4               	movwf	update_duty@value
   784  0382  2637               	fcall	_update_duty
   785                           
   786                           ;main.c: 64: TRISB = 0;
   787  0383  1683               	bsf	3,5	;RP0=1, select bank1
   788  0384  1303               	bcf	3,6	;RP1=0, select bank1
   789  0385  0186               	clrf	6	;volatile
   790                           
   791                           ;main.c: 65: T2CKPS1 = 0;
   792  0386  1283               	bcf	3,5	;RP0=0, select bank0
   793  0387  1303               	bcf	3,6	;RP1=0, select bank0
   794  0388  1092               	bcf	18,1	;volatile
   795                           
   796                           ;main.c: 66: T2CKPS0 = 0;
   797  0389  1012               	bcf	18,0	;volatile
   798                           
   799                           ;main.c: 67: CCP1M3 = 1;
   800  038A  1597               	bsf	23,3	;volatile
   801                           
   802                           ;main.c: 68: CCP1M2 = 1;
   803  038B  1517               	bsf	23,2	;volatile
   804                           
   805                           ;main.c: 69: TMR2ON = 1;
   806  038C  1512               	bsf	18,2	;volatile
   807                           
   808                           ;main.c: 72: T0CS = 0;
   809  038D  1683               	bsf	3,5	;RP0=1, select bank1
   810  038E  1303               	bcf	3,6	;RP1=0, select bank1
   811  038F  1281               	bcf	1,5	;volatile
   812                           
   813                           ;main.c: 77: TMR0IE = 1;
   814  0390  168B               	bsf	11,5	;volatile
   815                           
   816                           ;main.c: 78: GIE = 1;
   817  0391  178B               	bsf	11,7	;volatile
   818  0392                     l60:	
   819                           ;main.c: 81: for(;;)
   820                           
   821                           
   822                           ;main.c: 82: {
   823                           ;main.c: 86: }
   824  0392  2B92               	goto	l60
   825  0393                     __end_of_main:	
   826                           
   827                           	psect	text1
   828  0637                     __ptext1:	
   829 ;; *************** function _update_duty *****************
   830 ;; Defined at:
   831 ;;		line 27 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  value           2    4[BANK0 ] unsigned int 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   845 ;;      Params:         0       2       0       0
   846 ;;      Locals:         0       0       0       0
   847 ;;      Temps:          0       0       0       0
   848 ;;      Totals:         0       2       0       0
   849 ;;Total ram usage:        2 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    4
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _update_duty
   861  0637                     _update_duty:	
   862                           
   863                           ;main.c: 31: CCP1Y = value;
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _update_duty: [wreg+status,2+status,0]
   867  0637  1283               	bcf	3,5	;RP0=0, select bank0
   868  0638  1303               	bcf	3,6	;RP1=0, select bank0
   869  0639  1C24               	btfss	update_duty@value,0
   870  063A  2E3F               	goto	u1580
   871  063B  1283               	bcf	3,5	;RP0=0, select bank0
   872  063C  1303               	bcf	3,6	;RP1=0, select bank0
   873  063D  1617               	bsf	23,4	;volatile
   874  063E  2E42               	goto	l1251
   875  063F                     u1580:	
   876  063F  1283               	bcf	3,5	;RP0=0, select bank0
   877  0640  1303               	bcf	3,6	;RP1=0, select bank0
   878  0641  1217               	bcf	23,4	;volatile
   879  0642                     l1251:	
   880                           
   881                           ;main.c: 34: value >>= 1;
   882  0642  3001               	movlw	1
   883  0643                     u1605:	
   884  0643  1003               	clrc
   885  0644  0CA5               	rrf	update_duty@value+1,f
   886  0645  0CA4               	rrf	update_duty@value,f
   887  0646  3EFF               	addlw	-1
   888  0647  1D03               	skipz
   889  0648  2E43               	goto	u1605
   890                           
   891                           ;main.c: 35: CCP1X = value;
   892  0649  1C24               	btfss	update_duty@value,0
   893  064A  2E4F               	goto	u1610
   894  064B  1283               	bcf	3,5	;RP0=0, select bank0
   895  064C  1303               	bcf	3,6	;RP1=0, select bank0
   896  064D  1697               	bsf	23,5	;volatile
   897  064E  2E52               	goto	u1624
   898  064F                     u1610:	
   899  064F  1283               	bcf	3,5	;RP0=0, select bank0
   900  0650  1303               	bcf	3,6	;RP1=0, select bank0
   901  0651  1297               	bcf	23,5	;volatile
   902  0652                     u1624:	
   903                           
   904                           ;main.c: 38: value >>= 1;
   905  0652  3001               	movlw	1
   906  0653                     u1635:	
   907  0653  1003               	clrc
   908  0654  0CA5               	rrf	update_duty@value+1,f
   909  0655  0CA4               	rrf	update_duty@value,f
   910  0656  3EFF               	addlw	-1
   911  0657  1D03               	skipz
   912  0658  2E53               	goto	u1635
   913                           
   914                           ;main.c: 39: CCPR1L = value;
   915  0659  0824               	movf	update_duty@value,w
   916  065A  0095               	movwf	21	;volatile
   917  065B  0008               	return
   918  065C                     __end_of_update_duty:	
   919                           
   920                           	psect	text2
   921  0421                     __ptext2:	
   922 ;; *************** function _round *****************
   923 ;; Defined at:
   924 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\round.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  x               3   21[BANK1 ] void 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  f               3   24[BANK1 ] void 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  3   21[BANK1 ] void 
   931 ;; Registers used:
   932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   938 ;;      Params:         0       0       3       0
   939 ;;      Locals:         0       0       3       0
   940 ;;      Temps:          0       0       0       0
   941 ;;      Totals:         0       0       6       0
   942 ;;Total ram usage:        6 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    7
   945 ;; This function calls:
   946 ;;		___ftadd
   947 ;;		___ftneg
   948 ;;		_trunc
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _round
   956  0421                     _round:	
   957                           
   958                           ;incstack = 0
   959                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   960  0421  1683               	bsf	3,5	;RP0=1, select bank1
   961  0422  1303               	bcf	3,6	;RP1=0, select bank1
   962  0423  0835               	movf	round@x^(0+128),w
   963  0424  00A8               	movwf	___ftadd@f1^(0+128)
   964  0425  0836               	movf	(round@x+1)^(0+128),w
   965  0426  00A9               	movwf	(___ftadd@f1+1)^(0+128)
   966  0427  0837               	movf	(round@x+2)^(0+128),w
   967  0428  00AA               	movwf	(___ftadd@f1+2)^(0+128)
   968  0429  0835               	movf	round@x^(0+128),w
   969  042A  1283               	bcf	3,5	;RP0=0, select bank0
   970  042B  1303               	bcf	3,6	;RP1=0, select bank0
   971  042C  00E2               	movwf	trunc@x
   972  042D  1683               	bsf	3,5	;RP0=1, select bank1
   973  042E  1303               	bcf	3,6	;RP1=0, select bank1
   974  042F  0836               	movf	(round@x+1)^(0+128),w
   975  0430  1283               	bcf	3,5	;RP0=0, select bank0
   976  0431  1303               	bcf	3,6	;RP1=0, select bank0
   977  0432  00E3               	movwf	trunc@x+1
   978  0433  1683               	bsf	3,5	;RP0=1, select bank1
   979  0434  1303               	bcf	3,6	;RP1=0, select bank1
   980  0435  0837               	movf	(round@x+2)^(0+128),w
   981  0436  1283               	bcf	3,5	;RP0=0, select bank0
   982  0437  1303               	bcf	3,6	;RP1=0, select bank0
   983  0438  00E4               	movwf	trunc@x+2
   984  0439  2561               	fcall	_trunc
   985  043A  1283               	bcf	3,5	;RP0=0, select bank0
   986  043B  1303               	bcf	3,6	;RP1=0, select bank0
   987  043C  0862               	movf	?_trunc,w
   988  043D  1683               	bsf	3,5	;RP0=1, select bank1
   989  043E  1303               	bcf	3,6	;RP1=0, select bank1
   990  043F  00A5               	movwf	___ftneg@f1^(0+128)
   991  0440  1283               	bcf	3,5	;RP0=0, select bank0
   992  0441  1303               	bcf	3,6	;RP1=0, select bank0
   993  0442  0863               	movf	?_trunc+1,w
   994  0443  1683               	bsf	3,5	;RP0=1, select bank1
   995  0444  1303               	bcf	3,6	;RP1=0, select bank1
   996  0445  00A6               	movwf	(___ftneg@f1+1)^(0+128)
   997  0446  1283               	bcf	3,5	;RP0=0, select bank0
   998  0447  1303               	bcf	3,6	;RP1=0, select bank0
   999  0448  0864               	movf	?_trunc+2,w
  1000  0449  1683               	bsf	3,5	;RP0=1, select bank1
  1001  044A  1303               	bcf	3,6	;RP1=0, select bank1
  1002  044B  00A7               	movwf	(___ftneg@f1+2)^(0+128)
  1003  044C  26D8               	fcall	___ftneg
  1004  044D  1683               	bsf	3,5	;RP0=1, select bank1
  1005  044E  1303               	bcf	3,6	;RP1=0, select bank1
  1006  044F  0825               	movf	?___ftneg^(0+128),w
  1007  0450  00AB               	movwf	___ftadd@f2^(0+128)
  1008  0451  0826               	movf	(?___ftneg+1)^(0+128),w
  1009  0452  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  1010  0453  0827               	movf	(?___ftneg+2)^(0+128),w
  1011  0454  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  1012  0455  203D               	fcall	___ftadd
  1013  0456  1683               	bsf	3,5	;RP0=1, select bank1
  1014  0457  1303               	bcf	3,6	;RP1=0, select bank1
  1015  0458  0828               	movf	?___ftadd^(0+128),w
  1016  0459  00B8               	movwf	round@f^(0+128)
  1017  045A  0829               	movf	(?___ftadd+1)^(0+128),w
  1018  045B  00B9               	movwf	(round@f+1)^(0+128)
  1019  045C  082A               	movf	(?___ftadd+2)^(0+128),w
  1020  045D  00BA               	movwf	(round@f+2)^(0+128)
  1021  045E  0838               	movf	round@f^(0+128),w
  1022  045F  00A8               	movwf	___ftadd@f1^(0+128)
  1023  0460  0839               	movf	(round@f+1)^(0+128),w
  1024  0461  00A9               	movwf	(___ftadd@f1+1)^(0+128)
  1025  0462  083A               	movf	(round@f+2)^(0+128),w
  1026  0463  00AA               	movwf	(___ftadd@f1+2)^(0+128)
  1027  0464  0835               	movf	round@x^(0+128),w
  1028  0465  00AB               	movwf	___ftadd@f2^(0+128)
  1029  0466  0836               	movf	(round@x+1)^(0+128),w
  1030  0467  00AC               	movwf	(___ftadd@f2+1)^(0+128)
  1031  0468  0837               	movf	(round@x+2)^(0+128),w
  1032  0469  00AD               	movwf	(___ftadd@f2+2)^(0+128)
  1033  046A  203D               	fcall	___ftadd
  1034  046B  1683               	bsf	3,5	;RP0=1, select bank1
  1035  046C  1303               	bcf	3,6	;RP1=0, select bank1
  1036  046D  0828               	movf	?___ftadd^(0+128),w
  1037  046E  00B5               	movwf	round@x^(0+128)
  1038  046F  0829               	movf	(?___ftadd+1)^(0+128),w
  1039  0470  00B6               	movwf	(round@x+1)^(0+128)
  1040  0471  082A               	movf	(?___ftadd+2)^(0+128),w
  1041  0472  00B7               	movwf	(round@x+2)^(0+128)
  1042  0473  0835               	movf	round@x^(0+128),w
  1043  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0476  00E2               	movwf	trunc@x
  1046  0477  1683               	bsf	3,5	;RP0=1, select bank1
  1047  0478  1303               	bcf	3,6	;RP1=0, select bank1
  1048  0479  0836               	movf	(round@x+1)^(0+128),w
  1049  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1050  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1051  047C  00E3               	movwf	trunc@x+1
  1052  047D  1683               	bsf	3,5	;RP0=1, select bank1
  1053  047E  1303               	bcf	3,6	;RP1=0, select bank1
  1054  047F  0837               	movf	(round@x+2)^(0+128),w
  1055  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0482  00E4               	movwf	trunc@x+2
  1058  0483  2561               	fcall	_trunc
  1059  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0486  0862               	movf	?_trunc,w
  1062  0487  1683               	bsf	3,5	;RP0=1, select bank1
  1063  0488  1303               	bcf	3,6	;RP1=0, select bank1
  1064  0489  00B5               	movwf	?_round^(0+128)
  1065  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1066  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1067  048C  0863               	movf	?_trunc+1,w
  1068  048D  1683               	bsf	3,5	;RP0=1, select bank1
  1069  048E  1303               	bcf	3,6	;RP1=0, select bank1
  1070  048F  00B6               	movwf	(?_round+1)^(0+128)
  1071  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1072  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1073  0492  0864               	movf	?_trunc+2,w
  1074  0493  1683               	bsf	3,5	;RP0=1, select bank1
  1075  0494  1303               	bcf	3,6	;RP1=0, select bank1
  1076  0495  00B7               	movwf	(?_round+2)^(0+128)
  1077  0496  0008               	return
  1078  0497                     __end_of_round:	
  1079                           
  1080                           	psect	text3
  1081  0561                     __ptext3:	
  1082 ;; *************** function _trunc *****************
  1083 ;; Defined at:
  1084 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\trunc.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  x               3   66[BANK0 ] void 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  i               3    0[BANK1 ] void 
  1089 ;;  expon           2    3[BANK1 ] int 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  3   66[BANK0 ] int 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1099 ;;      Params:         0       3       0       0
  1100 ;;      Locals:         0       0       5       0
  1101 ;;      Temps:          0       1       0       0
  1102 ;;      Totals:         0       4       5       0
  1103 ;;Total ram usage:        9 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    6
  1106 ;; This function calls:
  1107 ;;		___altoft
  1108 ;;		___fttol
  1109 ;;		_frexp
  1110 ;; This function is called by:
  1111 ;;		_round
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           
  1116                           ;psect for function _trunc
  1117  0561                     _trunc:	
  1118                           
  1119                           ;incstack = 0
  1120                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1121  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0563  0862               	movf	trunc@x,w
  1124  0564  00A4               	movwf	frexp@value
  1125  0565  0863               	movf	trunc@x+1,w
  1126  0566  00A5               	movwf	frexp@value+1
  1127  0567  0864               	movf	trunc@x+2,w
  1128  0568  00A6               	movwf	frexp@value+2
  1129  0569  30A3               	movlw	(low (trunc@expon| 0))& (0+255)
  1130  056A  00E5               	movwf	??_trunc
  1131  056B  0865               	movf	??_trunc,w
  1132  056C  00A7               	movwf	frexp@eptr
  1133  056D  25FB               	fcall	_frexp
  1134  056E  1683               	bsf	3,5	;RP0=1, select bank1
  1135  056F  1303               	bcf	3,6	;RP1=0, select bank1
  1136  0570  1FA4               	btfss	(trunc@expon+1)^(0+128),7
  1137  0571  2D7B               	goto	l1597
  1138  0572  3000               	movlw	0
  1139  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0575  00E2               	movwf	?_trunc
  1142  0576  3000               	movlw	0
  1143  0577  00E3               	movwf	?_trunc+1
  1144  0578  3000               	movlw	0
  1145  0579  00E4               	movwf	?_trunc+2
  1146  057A  0008               	return
  1147  057B                     l1597:	
  1148  057B  3000               	movlw	0
  1149  057C  1683               	bsf	3,5	;RP0=1, select bank1
  1150  057D  1303               	bcf	3,6	;RP1=0, select bank1
  1151  057E  0224               	subwf	(trunc@expon+1)^(0+128),w
  1152  057F  3015               	movlw	21
  1153  0580  1903               	skipnz
  1154  0581  0223               	subwf	trunc@expon^(0+128),w
  1155  0582  1803               	btfsc	3,0
  1156  0583  0008               	return
  1157  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0586  0862               	movf	trunc@x,w
  1160  0587  00CC               	movwf	___fttol@f1
  1161  0588  0863               	movf	trunc@x+1,w
  1162  0589  00CD               	movwf	___fttol@f1+1
  1163  058A  0864               	movf	trunc@x+2,w
  1164  058B  00CE               	movwf	___fttol@f1+2
  1165  058C  2393               	fcall	___fttol
  1166  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1167  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1168  058F  084F               	movf	?___fttol+3,w
  1169  0590  00DD               	movwf	___altoft@c+3
  1170  0591  084E               	movf	?___fttol+2,w
  1171  0592  00DC               	movwf	___altoft@c+2
  1172  0593  084D               	movf	?___fttol+1,w
  1173  0594  00DB               	movwf	___altoft@c+1
  1174  0595  084C               	movf	?___fttol,w
  1175  0596  00DA               	movwf	___altoft@c
  1176  0597  25BB               	fcall	___altoft
  1177  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1179  059A  085A               	movf	?___altoft,w
  1180  059B  1683               	bsf	3,5	;RP0=1, select bank1
  1181  059C  1303               	bcf	3,6	;RP1=0, select bank1
  1182  059D  00A0               	movwf	trunc@i^(0+128)
  1183  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1184  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1185  05A0  085B               	movf	?___altoft+1,w
  1186  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1187  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1188  05A3  00A1               	movwf	(trunc@i+1)^(0+128)
  1189  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1190  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1191  05A6  085C               	movf	?___altoft+2,w
  1192  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  1193  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  1194  05A9  00A2               	movwf	(trunc@i+2)^(0+128)
  1195  05AA  0820               	movf	trunc@i^(0+128),w
  1196  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1197  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1198  05AD  00E2               	movwf	?_trunc
  1199  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  1200  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  1201  05B0  0821               	movf	(trunc@i+1)^(0+128),w
  1202  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1203  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1204  05B3  00E3               	movwf	?_trunc+1
  1205  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  1206  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  1207  05B6  0822               	movf	(trunc@i+2)^(0+128),w
  1208  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1209  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1210  05B9  00E4               	movwf	?_trunc+2
  1211  05BA  0008               	return
  1212  05BB                     __end_of_trunc:	
  1213                           
  1214                           	psect	text4
  1215  05FB                     __ptext4:	
  1216 ;; *************** function _frexp *****************
  1217 ;; Defined at:
  1218 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  value           3    4[BANK0 ] int 
  1221 ;;  eptr            1    7[BANK0 ] PTR int 
  1222 ;;		 -> trunc@expon(2), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  3    4[BANK0 ] PTR int 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1234 ;;      Params:         0       4       0       0
  1235 ;;      Locals:         0       0       0       0
  1236 ;;      Temps:          0       2       0       0
  1237 ;;      Totals:         0       6       0       0
  1238 ;;Total ram usage:        6 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    4
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_trunc
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           
  1249                           ;psect for function _frexp
  1250  05FB                     _frexp:	
  1251                           
  1252                           ;incstack = 0
  1253                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  1254  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1255  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1256  05FD  0826               	movf	frexp@value+2,w
  1257  05FE  0425               	iorwf	frexp@value+1,w
  1258  05FF  0424               	iorwf	frexp@value,w
  1259  0600  1D03               	skipz
  1260  0601  2E09               	goto	l1509
  1261  0602  0827               	movf	frexp@eptr,w
  1262  0603  0084               	movwf	4
  1263  0604  1383               	bcf	3,7	;select IRP bank0
  1264  0605  0180               	clrf	0
  1265  0606  0A84               	incf	4,f
  1266  0607  0180               	clrf	0
  1267                           
  1268                           ;	Return value of _frexp is never used
  1269  0608  0008               	return
  1270  0609                     l1509:	
  1271  0609  0826               	movf	frexp@value+2,w
  1272  060A  397F               	andlw	127
  1273  060B  00A8               	movwf	??_frexp
  1274  060C  01A9               	clrf	??_frexp+1
  1275  060D  1003               	clrc
  1276  060E  0DA8               	rlf	??_frexp,f
  1277  060F  0DA9               	rlf	??_frexp+1,f
  1278  0610  0827               	movf	frexp@eptr,w
  1279  0611  0084               	movwf	4
  1280  0612  0828               	movf	??_frexp,w
  1281  0613  1383               	bcf	3,7	;select IRP bank0
  1282  0614  0080               	movwf	0
  1283  0615  0A84               	incf	4,f
  1284  0616  0829               	movf	??_frexp+1,w
  1285  0617  0080               	movwf	0
  1286  0618  0D25               	rlf	frexp@value+1,w
  1287  0619  0D25               	rlf	frexp@value+1,w
  1288  061A  3901               	andlw	1
  1289  061B  00A8               	movwf	??_frexp
  1290  061C  01A9               	clrf	??_frexp+1
  1291  061D  0827               	movf	frexp@eptr,w
  1292  061E  0084               	movwf	4
  1293  061F  0828               	movf	??_frexp,w
  1294  0620  0480               	iorwf	0,f
  1295  0621  0A84               	incf	4,f
  1296  0622  0829               	movf	??_frexp+1,w
  1297  0623  0480               	iorwf	0,f
  1298  0624  0827               	movf	frexp@eptr,w
  1299  0625  0084               	movwf	4
  1300  0626  3082               	movlw	130
  1301  0627  0780               	addwf	0,f
  1302  0628  0F84               	incfsz	4,f
  1303  0629  0800               	movf	0,w
  1304  062A  1803               	skipnc
  1305  062B  0A00               	incf	0,w
  1306  062C  00FF               	movwf	127
  1307  062D  30FF               	movlw	255
  1308  062E  077F               	addwf	127,w
  1309  062F  0080               	movwf	0
  1310  0630  0384               	decf	4,f
  1311  0631  0826               	movf	frexp@value+2,w
  1312  0632  3980               	andlw	-128
  1313  0633  383F               	iorlw	63
  1314  0634  00A6               	movwf	frexp@value+2
  1315  0635  13A5               	bcf	frexp@value+1,7
  1316  0636  0008               	return
  1317  0637                     __end_of_frexp:	
  1318                           ;	Return value of _frexp is never used
  1319                           
  1320                           
  1321                           	psect	text5
  1322  0393                     __ptext5:	
  1323 ;; *************** function ___fttol *****************
  1324 ;; Defined at:
  1325 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  f1              3   44[BANK0 ] float 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  lval            4   53[BANK0 ] unsigned long 
  1330 ;;  exp1            1   57[BANK0 ] unsigned char 
  1331 ;;  sign1           1   52[BANK0 ] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  4   44[BANK0 ] long 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1341 ;;      Params:         0       4       0       0
  1342 ;;      Locals:         0       6       0       0
  1343 ;;      Temps:          0       4       0       0
  1344 ;;      Totals:         0      14       0       0
  1345 ;;Total ram usage:       14 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    4
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;;		_trunc
  1353 ;;		_convert_to_duty
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function ___fttol
  1359  0393                     ___fttol:	
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1363  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1364  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1365  0395  084C               	movf	___fttol@f1,w
  1366  0396  00D0               	movwf	??___fttol
  1367  0397  084D               	movf	___fttol@f1+1,w
  1368  0398  00D1               	movwf	??___fttol+1
  1369  0399  084E               	movf	___fttol@f1+2,w
  1370  039A  00D2               	movwf	??___fttol+2
  1371  039B  1003               	clrc
  1372  039C  0D51               	rlf	??___fttol+1,w
  1373  039D  0D52               	rlf	??___fttol+2,w
  1374  039E  00D3               	movwf	??___fttol+3
  1375  039F  0853               	movf	??___fttol+3,w
  1376  03A0  00D9               	movwf	___fttol@exp1
  1377  03A1  0859               	movf	___fttol@exp1,w
  1378  03A2  1D03               	btfss	3,2
  1379  03A3  2BAD               	goto	l1467
  1380  03A4  3000               	movlw	0
  1381  03A5  00CF               	movwf	?___fttol+3
  1382  03A6  3000               	movlw	0
  1383  03A7  00CE               	movwf	?___fttol+2
  1384  03A8  3000               	movlw	0
  1385  03A9  00CD               	movwf	?___fttol+1
  1386  03AA  3000               	movlw	0
  1387  03AB  00CC               	movwf	?___fttol
  1388  03AC  0008               	return
  1389  03AD                     l1467:	
  1390  03AD  084C               	movf	___fttol@f1,w
  1391  03AE  00D0               	movwf	??___fttol
  1392  03AF  084D               	movf	___fttol@f1+1,w
  1393  03B0  00D1               	movwf	??___fttol+1
  1394  03B1  084E               	movf	___fttol@f1+2,w
  1395  03B2  00D2               	movwf	??___fttol+2
  1396  03B3  3017               	movlw	23
  1397  03B4                     u2035:	
  1398  03B4  1003               	clrc
  1399  03B5  0CD2               	rrf	??___fttol+2,f
  1400  03B6  0CD1               	rrf	??___fttol+1,f
  1401  03B7  0CD0               	rrf	??___fttol,f
  1402  03B8  3EFF               	addlw	-1
  1403  03B9  1D03               	skipz
  1404  03BA  2BB4               	goto	u2035
  1405  03BB  0850               	movf	??___fttol,w
  1406  03BC  00D3               	movwf	??___fttol+3
  1407  03BD  0853               	movf	??___fttol+3,w
  1408  03BE  00D4               	movwf	___fttol@sign1
  1409  03BF  17CD               	bsf	___fttol@f1+1,7
  1410  03C0  30FF               	movlw	255
  1411  03C1  05CC               	andwf	___fttol@f1,f
  1412  03C2  30FF               	movlw	255
  1413  03C3  05CD               	andwf	___fttol@f1+1,f
  1414  03C4  3000               	movlw	0
  1415  03C5  05CE               	andwf	___fttol@f1+2,f
  1416  03C6  084C               	movf	___fttol@f1,w
  1417  03C7  00D5               	movwf	___fttol@lval
  1418  03C8  084D               	movf	___fttol@f1+1,w
  1419  03C9  00D6               	movwf	___fttol@lval+1
  1420  03CA  084E               	movf	___fttol@f1+2,w
  1421  03CB  00D7               	movwf	___fttol@lval+2
  1422  03CC  01D8               	clrf	___fttol@lval+3
  1423  03CD  308E               	movlw	142
  1424  03CE  02D9               	subwf	___fttol@exp1,f
  1425  03CF  1FD9               	btfss	___fttol@exp1,7
  1426  03D0  2BEF               	goto	l1487
  1427  03D1  0859               	movf	___fttol@exp1,w
  1428  03D2  3A80               	xorlw	128
  1429  03D3  3E8F               	addlw	143
  1430  03D4  1803               	skipnc
  1431  03D5  2BDF               	goto	l1485
  1432  03D6  3000               	movlw	0
  1433  03D7  00CF               	movwf	?___fttol+3
  1434  03D8  3000               	movlw	0
  1435  03D9  00CE               	movwf	?___fttol+2
  1436  03DA  3000               	movlw	0
  1437  03DB  00CD               	movwf	?___fttol+1
  1438  03DC  3000               	movlw	0
  1439  03DD  00CC               	movwf	?___fttol
  1440  03DE  0008               	return
  1441  03DF                     l1485:	
  1442  03DF  3001               	movlw	1
  1443  03E0                     u2065:	
  1444  03E0  1003               	clrc
  1445  03E1  0CD8               	rrf	___fttol@lval+3,f
  1446  03E2  0CD7               	rrf	___fttol@lval+2,f
  1447  03E3  0CD6               	rrf	___fttol@lval+1,f
  1448  03E4  0CD5               	rrf	___fttol@lval,f
  1449  03E5  3EFF               	addlw	-1
  1450  03E6  1D03               	skipz
  1451  03E7  2BE0               	goto	u2065
  1452  03E8  3001               	movlw	1
  1453  03E9  00D0               	movwf	??___fttol
  1454  03EA  0850               	movf	??___fttol,w
  1455  03EB  07D9               	addwf	___fttol@exp1,f
  1456  03EC  1903               	btfsc	3,2
  1457  03ED  2C0A               	goto	l1495
  1458  03EE  2BDF               	goto	l1485
  1459  03EF                     l1487:	
  1460  03EF  3018               	movlw	24
  1461  03F0  0259               	subwf	___fttol@exp1,w
  1462  03F1  1C03               	skipc
  1463  03F2  2C07               	goto	l427
  1464  03F3  3000               	movlw	0
  1465  03F4  00CF               	movwf	?___fttol+3
  1466  03F5  3000               	movlw	0
  1467  03F6  00CE               	movwf	?___fttol+2
  1468  03F7  3000               	movlw	0
  1469  03F8  00CD               	movwf	?___fttol+1
  1470  03F9  3000               	movlw	0
  1471  03FA  00CC               	movwf	?___fttol
  1472  03FB  0008               	return
  1473  03FC                     l1493:	
  1474  03FC  3001               	movlw	1
  1475  03FD  00D0               	movwf	??___fttol
  1476  03FE                     u2095:	
  1477  03FE  1003               	clrc
  1478  03FF  0DD5               	rlf	___fttol@lval,f
  1479  0400  0DD6               	rlf	___fttol@lval+1,f
  1480  0401  0DD7               	rlf	___fttol@lval+2,f
  1481  0402  0DD8               	rlf	___fttol@lval+3,f
  1482  0403  0BD0               	decfsz	??___fttol,f
  1483  0404  2BFE               	goto	u2095
  1484  0405  3001               	movlw	1
  1485  0406  02D9               	subwf	___fttol@exp1,f
  1486  0407                     l427:	
  1487  0407  0859               	movf	___fttol@exp1,w
  1488  0408  1D03               	btfss	3,2
  1489  0409  2BFC               	goto	l1493
  1490  040A                     l1495:	
  1491  040A  0854               	movf	___fttol@sign1,w
  1492  040B  1903               	btfsc	3,2
  1493  040C  2C18               	goto	l1499
  1494  040D  09D5               	comf	___fttol@lval,f
  1495  040E  09D6               	comf	___fttol@lval+1,f
  1496  040F  09D7               	comf	___fttol@lval+2,f
  1497  0410  09D8               	comf	___fttol@lval+3,f
  1498  0411  0AD5               	incf	___fttol@lval,f
  1499  0412  1903               	skipnz
  1500  0413  0AD6               	incf	___fttol@lval+1,f
  1501  0414  1903               	skipnz
  1502  0415  0AD7               	incf	___fttol@lval+2,f
  1503  0416  1903               	skipnz
  1504  0417  0AD8               	incf	___fttol@lval+3,f
  1505  0418                     l1499:	
  1506  0418  0858               	movf	___fttol@lval+3,w
  1507  0419  00CF               	movwf	?___fttol+3
  1508  041A  0857               	movf	___fttol@lval+2,w
  1509  041B  00CE               	movwf	?___fttol+2
  1510  041C  0856               	movf	___fttol@lval+1,w
  1511  041D  00CD               	movwf	?___fttol+1
  1512  041E  0855               	movf	___fttol@lval,w
  1513  041F  00CC               	movwf	?___fttol
  1514  0420  0008               	return
  1515  0421                     __end_of___fttol:	
  1516                           
  1517                           	psect	text6
  1518  05BB                     __ptext6:	
  1519 ;; *************** function ___altoft *****************
  1520 ;; Defined at:
  1521 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  c               4   58[BANK0 ] long 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  sign            1   65[BANK0 ] unsigned char 
  1526 ;;  exp             1   64[BANK0 ] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  3   58[BANK0 ] float 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1536 ;;      Params:         0       4       0       0
  1537 ;;      Locals:         0       2       0       0
  1538 ;;      Temps:          0       2       0       0
  1539 ;;      Totals:         0       8       0       0
  1540 ;;Total ram usage:        8 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    5
  1543 ;; This function calls:
  1544 ;;		___ftpack
  1545 ;; This function is called by:
  1546 ;;		_trunc
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           
  1551                           ;psect for function ___altoft
  1552  05BB                     ___altoft:	
  1553                           
  1554                           ;incstack = 0
  1555                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  1556  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1557  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1558  05BD  01E1               	clrf	___altoft@sign
  1559  05BE  308E               	movlw	142
  1560  05BF  00DE               	movwf	??___altoft
  1561  05C0  085E               	movf	??___altoft,w
  1562  05C1  00E0               	movwf	___altoft@exp
  1563  05C2  1FDD               	btfss	___altoft@c+3,7
  1564  05C3  2DD1               	goto	l1455
  1565  05C4  09DA               	comf	___altoft@c,f
  1566  05C5  09DB               	comf	___altoft@c+1,f
  1567  05C6  09DC               	comf	___altoft@c+2,f
  1568  05C7  09DD               	comf	___altoft@c+3,f
  1569  05C8  0ADA               	incf	___altoft@c,f
  1570  05C9  1903               	skipnz
  1571  05CA  0ADB               	incf	___altoft@c+1,f
  1572  05CB  1903               	skipnz
  1573  05CC  0ADC               	incf	___altoft@c+2,f
  1574  05CD  1903               	skipnz
  1575  05CE  0ADD               	incf	___altoft@c+3,f
  1576  05CF  01E1               	clrf	___altoft@sign
  1577  05D0  0AE1               	incf	___altoft@sign,f
  1578  05D1                     l1455:	
  1579  05D1  30FF               	movlw	255
  1580  05D2  055D               	andwf	___altoft@c+3,w
  1581  05D3  1903               	btfsc	3,2
  1582  05D4  2DE3               	goto	l1457
  1583  05D5  3001               	movlw	1
  1584  05D6                     u2005:	
  1585  05D6  1003               	clrc
  1586  05D7  0CDD               	rrf	___altoft@c+3,f
  1587  05D8  0CDC               	rrf	___altoft@c+2,f
  1588  05D9  0CDB               	rrf	___altoft@c+1,f
  1589  05DA  0CDA               	rrf	___altoft@c,f
  1590  05DB  3EFF               	addlw	-1
  1591  05DC  1D03               	skipz
  1592  05DD  2DD6               	goto	u2005
  1593  05DE  3001               	movlw	1
  1594  05DF  00DE               	movwf	??___altoft
  1595  05E0  085E               	movf	??___altoft,w
  1596  05E1  07E0               	addwf	___altoft@exp,f
  1597  05E2  2DD1               	goto	l1455
  1598  05E3                     l1457:	
  1599  05E3  085A               	movf	___altoft@c,w
  1600  05E4  00A4               	movwf	___ftpack@arg
  1601  05E5  085B               	movf	___altoft@c+1,w
  1602  05E6  00A5               	movwf	___ftpack@arg+1
  1603  05E7  085C               	movf	___altoft@c+2,w
  1604  05E8  00A6               	movwf	___ftpack@arg+2
  1605  05E9  0860               	movf	___altoft@exp,w
  1606  05EA  00DE               	movwf	??___altoft
  1607  05EB  085E               	movf	??___altoft,w
  1608  05EC  00A7               	movwf	___ftpack@exp
  1609  05ED  0861               	movf	___altoft@sign,w
  1610  05EE  00DF               	movwf	??___altoft+1
  1611  05EF  085F               	movf	??___altoft+1,w
  1612  05F0  00A8               	movwf	___ftpack@sign
  1613  05F1  2497               	fcall	___ftpack
  1614  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1615  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1616  05F4  0824               	movf	?___ftpack,w
  1617  05F5  00DA               	movwf	?___altoft
  1618  05F6  0825               	movf	?___ftpack+1,w
  1619  05F7  00DB               	movwf	?___altoft+1
  1620  05F8  0826               	movf	?___ftpack+2,w
  1621  05F9  00DC               	movwf	?___altoft+2
  1622  05FA  0008               	return
  1623  05FB                     __end_of___altoft:	
  1624                           
  1625                           	psect	text7
  1626  06D8                     __ptext7:	
  1627 ;; *************** function ___ftneg *****************
  1628 ;; Defined at:
  1629 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  f1              3    5[BANK1 ] float 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  3    5[BANK1 ] float 
  1636 ;; Registers used:
  1637 ;;		wreg
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1643 ;;      Params:         0       0       3       0
  1644 ;;      Locals:         0       0       0       0
  1645 ;;      Temps:          0       0       0       0
  1646 ;;      Totals:         0       0       3       0
  1647 ;;Total ram usage:        3 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    4
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_round
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function ___ftneg
  1659  06D8                     ___ftneg:	
  1660                           
  1661                           ;incstack = 0
  1662                           ; Regs used in ___ftneg: [wreg]
  1663  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  1664  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  1665  06DA  0827               	movf	(___ftneg@f1+2)^(0+128),w
  1666  06DB  0426               	iorwf	(___ftneg@f1+1)^(0+128),w
  1667  06DC  0425               	iorwf	___ftneg@f1^(0+128),w
  1668  06DD  1903               	skipnz
  1669  06DE  0008               	return
  1670  06DF  3080               	movlw	128
  1671  06E0  06A7               	xorwf	(___ftneg@f1+2)^(0+128),f
  1672  06E1  0008               	return
  1673  06E2                     __end_of___ftneg:	
  1674                           
  1675                           	psect	text8
  1676  003D                     __ptext8:	
  1677 ;; *************** function ___ftadd *****************
  1678 ;; Defined at:
  1679 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  f1              3    8[BANK1 ] float 
  1682 ;;  f2              3   11[BANK1 ] float 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  exp1            1   20[BANK1 ] unsigned char 
  1685 ;;  exp2            1   19[BANK1 ] unsigned char 
  1686 ;;  sign            1   18[BANK1 ] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  3    8[BANK1 ] float 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, pclath, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1696 ;;      Params:         0       0       6       0
  1697 ;;      Locals:         0       0       3       0
  1698 ;;      Temps:          0       0       4       0
  1699 ;;      Totals:         0       0      13       0
  1700 ;;Total ram usage:       13 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    5
  1703 ;; This function calls:
  1704 ;;		___ftpack
  1705 ;; This function is called by:
  1706 ;;		_round
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function ___ftadd
  1712  003D                     ___ftadd:	
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1716  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1717  003E  1303               	bcf	3,6	;RP1=0, select bank1
  1718  003F  0828               	movf	___ftadd@f1^(0+128),w
  1719  0040  00AE               	movwf	??___ftadd^(0+128)
  1720  0041  0829               	movf	(___ftadd@f1+1)^(0+128),w
  1721  0042  00AF               	movwf	(??___ftadd^(0+128)+1)
  1722  0043  082A               	movf	(___ftadd@f1+2)^(0+128),w
  1723  0044  00B0               	movwf	(??___ftadd^(0+128)+2)
  1724  0045  1003               	clrc
  1725  0046  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  1726  0047  0D30               	rlf	(??___ftadd^(0+128)+2),w
  1727  0048  00B1               	movwf	(??___ftadd+3)^(0+128)
  1728  0049  0831               	movf	(??___ftadd+3)^(0+128),w
  1729  004A  00B4               	movwf	___ftadd@exp1^(0+128)
  1730  004B  082B               	movf	___ftadd@f2^(0+128),w
  1731  004C  00AE               	movwf	??___ftadd^(0+128)
  1732  004D  082C               	movf	(___ftadd@f2+1)^(0+128),w
  1733  004E  00AF               	movwf	(??___ftadd^(0+128)+1)
  1734  004F  082D               	movf	(___ftadd@f2+2)^(0+128),w
  1735  0050  00B0               	movwf	(??___ftadd^(0+128)+2)
  1736  0051  1003               	clrc
  1737  0052  0D2F               	rlf	(??___ftadd^(0+128)+1),w
  1738  0053  0D30               	rlf	(??___ftadd^(0+128)+2),w
  1739  0054  00B1               	movwf	(??___ftadd+3)^(0+128)
  1740  0055  0831               	movf	(??___ftadd+3)^(0+128),w
  1741  0056  00B3               	movwf	___ftadd@exp2^(0+128)
  1742  0057  0834               	movf	___ftadd@exp1^(0+128),w
  1743  0058  1903               	btfsc	3,2
  1744  0059  2866               	goto	l1525
  1745  005A  0833               	movf	___ftadd@exp2^(0+128),w
  1746  005B  0234               	subwf	___ftadd@exp1^(0+128),w
  1747  005C  1803               	skipnc
  1748  005D  286D               	goto	l1529
  1749  005E  0334               	decf	___ftadd@exp1^(0+128),w
  1750  005F  3AFF               	xorlw	255
  1751  0060  0733               	addwf	___ftadd@exp2^(0+128),w
  1752  0061  00AE               	movwf	??___ftadd^(0+128)
  1753  0062  3019               	movlw	25
  1754  0063  022E               	subwf	??___ftadd^(0+128),w
  1755  0064  1C03               	skipc
  1756  0065  286D               	goto	l1529
  1757  0066                     l1525:	
  1758  0066  082B               	movf	___ftadd@f2^(0+128),w
  1759  0067  00A8               	movwf	?___ftadd^(0+128)
  1760  0068  082C               	movf	(___ftadd@f2+1)^(0+128),w
  1761  0069  00A9               	movwf	(?___ftadd+1)^(0+128)
  1762  006A  082D               	movf	(___ftadd@f2+2)^(0+128),w
  1763  006B  00AA               	movwf	(?___ftadd+2)^(0+128)
  1764  006C  0008               	return
  1765  006D                     l1529:	
  1766  006D  0833               	movf	___ftadd@exp2^(0+128),w
  1767  006E  1903               	btfsc	3,2
  1768  006F  0008               	return
  1769  0070  0834               	movf	___ftadd@exp1^(0+128),w
  1770  0071  0233               	subwf	___ftadd@exp2^(0+128),w
  1771  0072  1803               	skipnc
  1772  0073  287C               	goto	l1535
  1773  0074  0333               	decf	___ftadd@exp2^(0+128),w
  1774  0075  3AFF               	xorlw	255
  1775  0076  0734               	addwf	___ftadd@exp1^(0+128),w
  1776  0077  00AE               	movwf	??___ftadd^(0+128)
  1777  0078  3019               	movlw	25
  1778  0079  022E               	subwf	??___ftadd^(0+128),w
  1779  007A  1803               	btfsc	3,0
  1780  007B  0008               	return
  1781  007C                     l1535:	
  1782  007C  3006               	movlw	6
  1783  007D  00AE               	movwf	??___ftadd^(0+128)
  1784  007E  082E               	movf	??___ftadd^(0+128),w
  1785  007F  00B2               	movwf	___ftadd@sign^(0+128)
  1786  0080  1BAA               	btfsc	(___ftadd@f1+2)^(0+128),7
  1787  0081  17B2               	bsf	___ftadd@sign^(0+128),7
  1788  0082  1BAD               	btfsc	(___ftadd@f2+2)^(0+128),7
  1789  0083  1732               	bsf	___ftadd@sign^(0+128),6
  1790  0084  17A9               	bsf	(___ftadd@f1^(0+128)+1),7
  1791  0085  30FF               	movlw	255
  1792  0086  05A8               	andwf	___ftadd@f1^(0+128),f
  1793  0087  30FF               	movlw	255
  1794  0088  05A9               	andwf	(___ftadd@f1+1)^(0+128),f
  1795  0089  3000               	movlw	0
  1796  008A  05AA               	andwf	(___ftadd@f1+2)^(0+128),f
  1797  008B  17AC               	bsf	(___ftadd@f2^(0+128)+1),7
  1798  008C  30FF               	movlw	255
  1799  008D  05AB               	andwf	___ftadd@f2^(0+128),f
  1800  008E  30FF               	movlw	255
  1801  008F  05AC               	andwf	(___ftadd@f2+1)^(0+128),f
  1802  0090  3000               	movlw	0
  1803  0091  05AD               	andwf	(___ftadd@f2+2)^(0+128),f
  1804  0092  0833               	movf	___ftadd@exp2^(0+128),w
  1805  0093  0234               	subwf	___ftadd@exp1^(0+128),w
  1806  0094  1803               	skipnc
  1807  0095  28BC               	goto	l1557
  1808  0096                     l1547:	
  1809  0096  3001               	movlw	1
  1810  0097                     u2225:	
  1811  0097  1003               	clrc
  1812  0098  0DAB               	rlf	___ftadd@f2^(0+128),f
  1813  0099  0DAC               	rlf	(___ftadd@f2+1)^(0+128),f
  1814  009A  0DAD               	rlf	(___ftadd@f2+2)^(0+128),f
  1815  009B  3EFF               	addlw	-1
  1816  009C  1D03               	skipz
  1817  009D  2897               	goto	u2225
  1818  009E  3001               	movlw	1
  1819  009F  02B3               	subwf	___ftadd@exp2^(0+128),f
  1820  00A0  0833               	movf	___ftadd@exp2^(0+128),w
  1821  00A1  0634               	xorwf	___ftadd@exp1^(0+128),w
  1822  00A2  1903               	skipnz
  1823  00A3  28B7               	goto	l1555
  1824  00A4  3001               	movlw	1
  1825  00A5  02B2               	subwf	___ftadd@sign^(0+128),f
  1826  00A6  0832               	movf	___ftadd@sign^(0+128),w
  1827  00A7  3907               	andlw	7
  1828  00A8  1903               	btfsc	3,2
  1829  00A9  28B7               	goto	l1555
  1830  00AA  2896               	goto	l1547
  1831  00AB                     l1553:	
  1832  00AB  3001               	movlw	1
  1833  00AC                     u2255:	
  1834  00AC  1003               	clrc
  1835  00AD  0CAA               	rrf	(___ftadd@f1+2)^(0+128),f
  1836  00AE  0CA9               	rrf	(___ftadd@f1+1)^(0+128),f
  1837  00AF  0CA8               	rrf	___ftadd@f1^(0+128),f
  1838  00B0  3EFF               	addlw	-1
  1839  00B1  1D03               	skipz
  1840  00B2  28AC               	goto	u2255
  1841  00B3  3001               	movlw	1
  1842  00B4  00AE               	movwf	??___ftadd^(0+128)
  1843  00B5  082E               	movf	??___ftadd^(0+128),w
  1844  00B6  07B4               	addwf	___ftadd@exp1^(0+128),f
  1845  00B7                     l1555:	
  1846  00B7  0834               	movf	___ftadd@exp1^(0+128),w
  1847  00B8  0633               	xorwf	___ftadd@exp2^(0+128),w
  1848  00B9  1903               	btfsc	3,2
  1849  00BA  28E5               	goto	l367
  1850  00BB  28AB               	goto	l1553
  1851  00BC                     l1557:	
  1852  00BC  0834               	movf	___ftadd@exp1^(0+128),w
  1853  00BD  0233               	subwf	___ftadd@exp2^(0+128),w
  1854  00BE  1803               	skipnc
  1855  00BF  28E5               	goto	l367
  1856  00C0                     l1559:	
  1857  00C0  3001               	movlw	1
  1858  00C1                     u2285:	
  1859  00C1  1003               	clrc
  1860  00C2  0DA8               	rlf	___ftadd@f1^(0+128),f
  1861  00C3  0DA9               	rlf	(___ftadd@f1+1)^(0+128),f
  1862  00C4  0DAA               	rlf	(___ftadd@f1+2)^(0+128),f
  1863  00C5  3EFF               	addlw	-1
  1864  00C6  1D03               	skipz
  1865  00C7  28C1               	goto	u2285
  1866  00C8  3001               	movlw	1
  1867  00C9  02B4               	subwf	___ftadd@exp1^(0+128),f
  1868  00CA  0833               	movf	___ftadd@exp2^(0+128),w
  1869  00CB  0634               	xorwf	___ftadd@exp1^(0+128),w
  1870  00CC  1903               	skipnz
  1871  00CD  28E1               	goto	l1567
  1872  00CE  3001               	movlw	1
  1873  00CF  02B2               	subwf	___ftadd@sign^(0+128),f
  1874  00D0  0832               	movf	___ftadd@sign^(0+128),w
  1875  00D1  3907               	andlw	7
  1876  00D2  1903               	btfsc	3,2
  1877  00D3  28E1               	goto	l1567
  1878  00D4  28C0               	goto	l1559
  1879  00D5                     l1565:	
  1880  00D5  3001               	movlw	1
  1881  00D6                     u2315:	
  1882  00D6  1003               	clrc
  1883  00D7  0CAD               	rrf	(___ftadd@f2+2)^(0+128),f
  1884  00D8  0CAC               	rrf	(___ftadd@f2+1)^(0+128),f
  1885  00D9  0CAB               	rrf	___ftadd@f2^(0+128),f
  1886  00DA  3EFF               	addlw	-1
  1887  00DB  1D03               	skipz
  1888  00DC  28D6               	goto	u2315
  1889  00DD  3001               	movlw	1
  1890  00DE  00AE               	movwf	??___ftadd^(0+128)
  1891  00DF  082E               	movf	??___ftadd^(0+128),w
  1892  00E0  07B3               	addwf	___ftadd@exp2^(0+128),f
  1893  00E1                     l1567:	
  1894  00E1  0834               	movf	___ftadd@exp1^(0+128),w
  1895  00E2  0633               	xorwf	___ftadd@exp2^(0+128),w
  1896  00E3  1D03               	skipz
  1897  00E4  28D5               	goto	l1565
  1898  00E5                     l367:	
  1899  00E5  1FB2               	btfss	___ftadd@sign^(0+128),7
  1900  00E6  28F7               	goto	l1571
  1901  00E7  30FF               	movlw	255
  1902  00E8  06A8               	xorwf	___ftadd@f1^(0+128),f
  1903  00E9  30FF               	movlw	255
  1904  00EA  06A9               	xorwf	(___ftadd@f1+1)^(0+128),f
  1905  00EB  30FF               	movlw	255
  1906  00EC  06AA               	xorwf	(___ftadd@f1+2)^(0+128),f
  1907  00ED  3001               	movlw	1
  1908  00EE  07A8               	addwf	___ftadd@f1^(0+128),f
  1909  00EF  3000               	movlw	0
  1910  00F0  1803               	skipnc
  1911  00F1  3001               	movlw	1
  1912  00F2  07A9               	addwf	(___ftadd@f1+1)^(0+128),f
  1913  00F3  3000               	movlw	0
  1914  00F4  1803               	skipnc
  1915  00F5  3001               	movlw	1
  1916  00F6  07AA               	addwf	(___ftadd@f1+2)^(0+128),f
  1917  00F7                     l1571:	
  1918  00F7  1F32               	btfss	___ftadd@sign^(0+128),6
  1919  00F8  2909               	goto	l1575
  1920  00F9  30FF               	movlw	255
  1921  00FA  06AB               	xorwf	___ftadd@f2^(0+128),f
  1922  00FB  30FF               	movlw	255
  1923  00FC  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  1924  00FD  30FF               	movlw	255
  1925  00FE  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  1926  00FF  3001               	movlw	1
  1927  0100  07AB               	addwf	___ftadd@f2^(0+128),f
  1928  0101  3000               	movlw	0
  1929  0102  1803               	skipnc
  1930  0103  3001               	movlw	1
  1931  0104  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  1932  0105  3000               	movlw	0
  1933  0106  1803               	skipnc
  1934  0107  3001               	movlw	1
  1935  0108  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  1936  0109                     l1575:	
  1937  0109  01B2               	clrf	___ftadd@sign^(0+128)
  1938  010A  0828               	movf	___ftadd@f1^(0+128),w
  1939  010B  07AB               	addwf	___ftadd@f2^(0+128),f
  1940  010C  0829               	movf	(___ftadd@f1+1)^(0+128),w
  1941  010D  1103               	clrz
  1942  010E  1803               	skipnc
  1943  010F  0A29               	incf	(___ftadd@f1+1)^(0+128),w
  1944  0110  1D03               	btfss	3,2
  1945  0111  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  1946  0112  082A               	movf	(___ftadd@f1+2)^(0+128),w
  1947  0113  1103               	clrz
  1948  0114  1803               	skipnc
  1949  0115  0A2A               	incf	(___ftadd@f1+2)^(0+128),w
  1950  0116  1D03               	btfss	3,2
  1951  0117  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  1952  0118  1FAD               	btfss	(___ftadd@f2+2)^(0+128),7
  1953  0119  292C               	goto	l1585
  1954  011A  30FF               	movlw	255
  1955  011B  06AB               	xorwf	___ftadd@f2^(0+128),f
  1956  011C  30FF               	movlw	255
  1957  011D  06AC               	xorwf	(___ftadd@f2+1)^(0+128),f
  1958  011E  30FF               	movlw	255
  1959  011F  06AD               	xorwf	(___ftadd@f2+2)^(0+128),f
  1960  0120  3001               	movlw	1
  1961  0121  07AB               	addwf	___ftadd@f2^(0+128),f
  1962  0122  3000               	movlw	0
  1963  0123  1803               	skipnc
  1964  0124  3001               	movlw	1
  1965  0125  07AC               	addwf	(___ftadd@f2+1)^(0+128),f
  1966  0126  3000               	movlw	0
  1967  0127  1803               	skipnc
  1968  0128  3001               	movlw	1
  1969  0129  07AD               	addwf	(___ftadd@f2+2)^(0+128),f
  1970  012A  01B2               	clrf	___ftadd@sign^(0+128)
  1971  012B  0AB2               	incf	___ftadd@sign^(0+128),f
  1972  012C                     l1585:	
  1973  012C  082B               	movf	___ftadd@f2^(0+128),w
  1974  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1975  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1976  012F  00A4               	movwf	___ftpack@arg
  1977  0130  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0131  1303               	bcf	3,6	;RP1=0, select bank1
  1979  0132  082C               	movf	(___ftadd@f2+1)^(0+128),w
  1980  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0135  00A5               	movwf	___ftpack@arg+1
  1983  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0138  082D               	movf	(___ftadd@f2+2)^(0+128),w
  1986  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1987  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1988  013B  00A6               	movwf	___ftpack@arg+2
  1989  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1990  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1991  013E  0834               	movf	___ftadd@exp1^(0+128),w
  1992  013F  00AE               	movwf	??___ftadd^(0+128)
  1993  0140  082E               	movf	??___ftadd^(0+128),w
  1994  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0143  00A7               	movwf	___ftpack@exp
  1997  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0145  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0146  0832               	movf	___ftadd@sign^(0+128),w
  2000  0147  00AF               	movwf	(??___ftadd+1)^(0+128)
  2001  0148  082F               	movf	(??___ftadd+1)^(0+128),w
  2002  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2003  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2004  014B  00A8               	movwf	___ftpack@sign
  2005  014C  2497               	fcall	___ftpack
  2006  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2007  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2008  014F  0824               	movf	?___ftpack,w
  2009  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2010  0151  1303               	bcf	3,6	;RP1=0, select bank1
  2011  0152  00A8               	movwf	?___ftadd^(0+128)
  2012  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0154  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0155  0825               	movf	?___ftpack+1,w
  2015  0156  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0157  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0158  00A9               	movwf	(?___ftadd+1)^(0+128)
  2018  0159  1283               	bcf	3,5	;RP0=0, select bank0
  2019  015A  1303               	bcf	3,6	;RP1=0, select bank0
  2020  015B  0826               	movf	?___ftpack+2,w
  2021  015C  1683               	bsf	3,5	;RP0=1, select bank1
  2022  015D  1303               	bcf	3,6	;RP1=0, select bank1
  2023  015E  00AA               	movwf	(?___ftadd+2)^(0+128)
  2024  015F  0008               	return
  2025  0160                     __end_of___ftadd:	
  2026                           
  2027                           	psect	text9
  2028  067F                     __ptext9:	
  2029 ;; *************** function ___lwtoft *****************
  2030 ;; Defined at:
  2031 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  c               2   12[BANK0 ] unsigned int 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  3   12[BANK0 ] float 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0, pclath, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2045 ;;      Params:         0       3       0       0
  2046 ;;      Locals:         0       0       0       0
  2047 ;;      Temps:          0       1       0       0
  2048 ;;      Totals:         0       4       0       0
  2049 ;;Total ram usage:        4 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    5
  2052 ;; This function calls:
  2053 ;;		___ftpack
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;;		_convert_to_duty
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function ___lwtoft
  2062  067F                     ___lwtoft:	
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2066  067F  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0680  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0681  082C               	movf	___lwtoft@c,w
  2069  0682  00A4               	movwf	___ftpack@arg
  2070  0683  082D               	movf	___lwtoft@c+1,w
  2071  0684  00A5               	movwf	___ftpack@arg+1
  2072  0685  01A6               	clrf	___ftpack@arg+2
  2073  0686  308E               	movlw	142
  2074  0687  00AF               	movwf	??___lwtoft
  2075  0688  082F               	movf	??___lwtoft,w
  2076  0689  00A7               	movwf	___ftpack@exp
  2077  068A  01A8               	clrf	___ftpack@sign
  2078  068B  2497               	fcall	___ftpack
  2079  068C  1283               	bcf	3,5	;RP0=0, select bank0
  2080  068D  1303               	bcf	3,6	;RP1=0, select bank0
  2081  068E  0824               	movf	?___ftpack,w
  2082  068F  00AC               	movwf	?___lwtoft
  2083  0690  0825               	movf	?___ftpack+1,w
  2084  0691  00AD               	movwf	?___lwtoft+1
  2085  0692  0826               	movf	?___ftpack+2,w
  2086  0693  00AE               	movwf	?___lwtoft+2
  2087  0694  0008               	return
  2088  0695                     __end_of___lwtoft:	
  2089                           
  2090                           	psect	text10
  2091  0160                     __ptext10:	
  2092 ;; *************** function ___ftmul *****************
  2093 ;; Defined at:
  2094 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  f1              3   28[BANK0 ] float 
  2097 ;;  f2              3   31[BANK0 ] float 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  2100 ;;  sign            1   43[BANK0 ] unsigned char 
  2101 ;;  cntr            1   42[BANK0 ] unsigned char 
  2102 ;;  exp             1   38[BANK0 ] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  3   28[BANK0 ] float 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2112 ;;      Params:         0       6       0       0
  2113 ;;      Locals:         0       6       0       0
  2114 ;;      Temps:          0       4       0       0
  2115 ;;      Totals:         0      16       0       0
  2116 ;;Total ram usage:       16 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    5
  2119 ;; This function calls:
  2120 ;;		___ftpack
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;;		_convert_to_duty
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function ___ftmul
  2129  0160                     ___ftmul:	
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2133  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0161  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0162  083C               	movf	___ftmul@f1,w
  2136  0163  00C2               	movwf	??___ftmul
  2137  0164  083D               	movf	___ftmul@f1+1,w
  2138  0165  00C3               	movwf	??___ftmul+1
  2139  0166  083E               	movf	___ftmul@f1+2,w
  2140  0167  00C4               	movwf	??___ftmul+2
  2141  0168  1003               	clrc
  2142  0169  0D43               	rlf	??___ftmul+1,w
  2143  016A  0D44               	rlf	??___ftmul+2,w
  2144  016B  00C5               	movwf	??___ftmul+3
  2145  016C  0845               	movf	??___ftmul+3,w
  2146  016D  00C6               	movwf	___ftmul@exp
  2147  016E  0846               	movf	___ftmul@exp,w
  2148  016F  1D03               	btfss	3,2
  2149  0170  2978               	goto	l1663
  2150  0171  3000               	movlw	0
  2151  0172  00BC               	movwf	?___ftmul
  2152  0173  3000               	movlw	0
  2153  0174  00BD               	movwf	?___ftmul+1
  2154  0175  3000               	movlw	0
  2155  0176  00BE               	movwf	?___ftmul+2
  2156  0177  0008               	return
  2157  0178                     l1663:	
  2158  0178  083F               	movf	___ftmul@f2,w
  2159  0179  00C2               	movwf	??___ftmul
  2160  017A  0840               	movf	___ftmul@f2+1,w
  2161  017B  00C3               	movwf	??___ftmul+1
  2162  017C  0841               	movf	___ftmul@f2+2,w
  2163  017D  00C4               	movwf	??___ftmul+2
  2164  017E  1003               	clrc
  2165  017F  0D43               	rlf	??___ftmul+1,w
  2166  0180  0D44               	rlf	??___ftmul+2,w
  2167  0181  00C5               	movwf	??___ftmul+3
  2168  0182  0845               	movf	??___ftmul+3,w
  2169  0183  00CB               	movwf	___ftmul@sign
  2170  0184  084B               	movf	___ftmul@sign,w
  2171  0185  1D03               	btfss	3,2
  2172  0186  298E               	goto	l1669
  2173  0187  3000               	movlw	0
  2174  0188  00BC               	movwf	?___ftmul
  2175  0189  3000               	movlw	0
  2176  018A  00BD               	movwf	?___ftmul+1
  2177  018B  3000               	movlw	0
  2178  018C  00BE               	movwf	?___ftmul+2
  2179  018D  0008               	return
  2180  018E                     l1669:	
  2181  018E  084B               	movf	___ftmul@sign,w
  2182  018F  3E7B               	addlw	123
  2183  0190  00C2               	movwf	??___ftmul
  2184  0191  0842               	movf	??___ftmul,w
  2185  0192  07C6               	addwf	___ftmul@exp,f
  2186  0193  083C               	movf	___ftmul@f1,w
  2187  0194  00C2               	movwf	??___ftmul
  2188  0195  083D               	movf	___ftmul@f1+1,w
  2189  0196  00C3               	movwf	??___ftmul+1
  2190  0197  083E               	movf	___ftmul@f1+2,w
  2191  0198  00C4               	movwf	??___ftmul+2
  2192  0199  3010               	movlw	16
  2193  019A                     u2495:	
  2194  019A  1003               	clrc
  2195  019B  0CC4               	rrf	??___ftmul+2,f
  2196  019C  0CC3               	rrf	??___ftmul+1,f
  2197  019D  0CC2               	rrf	??___ftmul,f
  2198  019E  3EFF               	addlw	-1
  2199  019F  1D03               	skipz
  2200  01A0  299A               	goto	u2495
  2201  01A1  0842               	movf	??___ftmul,w
  2202  01A2  00C5               	movwf	??___ftmul+3
  2203  01A3  0845               	movf	??___ftmul+3,w
  2204  01A4  00CB               	movwf	___ftmul@sign
  2205  01A5  083F               	movf	___ftmul@f2,w
  2206  01A6  00C2               	movwf	??___ftmul
  2207  01A7  0840               	movf	___ftmul@f2+1,w
  2208  01A8  00C3               	movwf	??___ftmul+1
  2209  01A9  0841               	movf	___ftmul@f2+2,w
  2210  01AA  00C4               	movwf	??___ftmul+2
  2211  01AB  3010               	movlw	16
  2212  01AC                     u2505:	
  2213  01AC  1003               	clrc
  2214  01AD  0CC4               	rrf	??___ftmul+2,f
  2215  01AE  0CC3               	rrf	??___ftmul+1,f
  2216  01AF  0CC2               	rrf	??___ftmul,f
  2217  01B0  3EFF               	addlw	-1
  2218  01B1  1D03               	skipz
  2219  01B2  29AC               	goto	u2505
  2220  01B3  0842               	movf	??___ftmul,w
  2221  01B4  00C5               	movwf	??___ftmul+3
  2222  01B5  0845               	movf	??___ftmul+3,w
  2223  01B6  06CB               	xorwf	___ftmul@sign,f
  2224  01B7  3080               	movlw	128
  2225  01B8  00C2               	movwf	??___ftmul
  2226  01B9  0842               	movf	??___ftmul,w
  2227  01BA  05CB               	andwf	___ftmul@sign,f
  2228  01BB  17BD               	bsf	___ftmul@f1+1,7
  2229  01BC  17C0               	bsf	___ftmul@f2+1,7
  2230  01BD  30FF               	movlw	255
  2231  01BE  05BF               	andwf	___ftmul@f2,f
  2232  01BF  30FF               	movlw	255
  2233  01C0  05C0               	andwf	___ftmul@f2+1,f
  2234  01C1  3000               	movlw	0
  2235  01C2  05C1               	andwf	___ftmul@f2+2,f
  2236  01C3  3000               	movlw	0
  2237  01C4  00C7               	movwf	___ftmul@f3_as_product
  2238  01C5  3000               	movlw	0
  2239  01C6  00C8               	movwf	___ftmul@f3_as_product+1
  2240  01C7  3000               	movlw	0
  2241  01C8  00C9               	movwf	___ftmul@f3_as_product+2
  2242  01C9  3007               	movlw	7
  2243  01CA  00C2               	movwf	??___ftmul
  2244  01CB  0842               	movf	??___ftmul,w
  2245  01CC  00CA               	movwf	___ftmul@cntr
  2246  01CD                     l1681:	
  2247  01CD  1C3C               	btfss	___ftmul@f1,0
  2248  01CE  29DD               	goto	l1685
  2249  01CF  083F               	movf	___ftmul@f2,w
  2250  01D0  07C7               	addwf	___ftmul@f3_as_product,f
  2251  01D1  0840               	movf	___ftmul@f2+1,w
  2252  01D2  1103               	clrz
  2253  01D3  1803               	skipnc
  2254  01D4  0A40               	incf	___ftmul@f2+1,w
  2255  01D5  1D03               	btfss	3,2
  2256  01D6  07C8               	addwf	___ftmul@f3_as_product+1,f
  2257  01D7  0841               	movf	___ftmul@f2+2,w
  2258  01D8  1103               	clrz
  2259  01D9  1803               	skipnc
  2260  01DA  0A41               	incf	___ftmul@f2+2,w
  2261  01DB  1D03               	btfss	3,2
  2262  01DC  07C9               	addwf	___ftmul@f3_as_product+2,f
  2263  01DD                     l1685:	
  2264  01DD  3001               	movlw	1
  2265  01DE                     u2535:	
  2266  01DE  1003               	clrc
  2267  01DF  0CBE               	rrf	___ftmul@f1+2,f
  2268  01E0  0CBD               	rrf	___ftmul@f1+1,f
  2269  01E1  0CBC               	rrf	___ftmul@f1,f
  2270  01E2  3EFF               	addlw	-1
  2271  01E3  1D03               	skipz
  2272  01E4  29DE               	goto	u2535
  2273  01E5  3001               	movlw	1
  2274  01E6                     u2545:	
  2275  01E6  1003               	clrc
  2276  01E7  0DBF               	rlf	___ftmul@f2,f
  2277  01E8  0DC0               	rlf	___ftmul@f2+1,f
  2278  01E9  0DC1               	rlf	___ftmul@f2+2,f
  2279  01EA  3EFF               	addlw	-1
  2280  01EB  1D03               	skipz
  2281  01EC  29E6               	goto	u2545
  2282  01ED  3001               	movlw	1
  2283  01EE  02CA               	subwf	___ftmul@cntr,f
  2284  01EF  1D03               	btfss	3,2
  2285  01F0  29CD               	goto	l1681
  2286  01F1  3009               	movlw	9
  2287  01F2  00C2               	movwf	??___ftmul
  2288  01F3  0842               	movf	??___ftmul,w
  2289  01F4  00CA               	movwf	___ftmul@cntr
  2290  01F5                     l1693:	
  2291  01F5  1C3C               	btfss	___ftmul@f1,0
  2292  01F6  2A05               	goto	l1697
  2293  01F7  083F               	movf	___ftmul@f2,w
  2294  01F8  07C7               	addwf	___ftmul@f3_as_product,f
  2295  01F9  0840               	movf	___ftmul@f2+1,w
  2296  01FA  1103               	clrz
  2297  01FB  1803               	skipnc
  2298  01FC  0A40               	incf	___ftmul@f2+1,w
  2299  01FD  1D03               	btfss	3,2
  2300  01FE  07C8               	addwf	___ftmul@f3_as_product+1,f
  2301  01FF  0841               	movf	___ftmul@f2+2,w
  2302  0200  1103               	clrz
  2303  0201  1803               	skipnc
  2304  0202  0A41               	incf	___ftmul@f2+2,w
  2305  0203  1D03               	btfss	3,2
  2306  0204  07C9               	addwf	___ftmul@f3_as_product+2,f
  2307  0205                     l1697:	
  2308  0205  3001               	movlw	1
  2309  0206                     u2585:	
  2310  0206  1003               	clrc
  2311  0207  0CBE               	rrf	___ftmul@f1+2,f
  2312  0208  0CBD               	rrf	___ftmul@f1+1,f
  2313  0209  0CBC               	rrf	___ftmul@f1,f
  2314  020A  3EFF               	addlw	-1
  2315  020B  1D03               	skipz
  2316  020C  2A06               	goto	u2585
  2317  020D  3001               	movlw	1
  2318  020E                     u2595:	
  2319  020E  1003               	clrc
  2320  020F  0CC9               	rrf	___ftmul@f3_as_product+2,f
  2321  0210  0CC8               	rrf	___ftmul@f3_as_product+1,f
  2322  0211  0CC7               	rrf	___ftmul@f3_as_product,f
  2323  0212  3EFF               	addlw	-1
  2324  0213  1D03               	skipz
  2325  0214  2A0E               	goto	u2595
  2326  0215  3001               	movlw	1
  2327  0216  02CA               	subwf	___ftmul@cntr,f
  2328  0217  1D03               	btfss	3,2
  2329  0218  29F5               	goto	l1693
  2330  0219  0847               	movf	___ftmul@f3_as_product,w
  2331  021A  00A4               	movwf	___ftpack@arg
  2332  021B  0848               	movf	___ftmul@f3_as_product+1,w
  2333  021C  00A5               	movwf	___ftpack@arg+1
  2334  021D  0849               	movf	___ftmul@f3_as_product+2,w
  2335  021E  00A6               	movwf	___ftpack@arg+2
  2336  021F  0846               	movf	___ftmul@exp,w
  2337  0220  00C2               	movwf	??___ftmul
  2338  0221  0842               	movf	??___ftmul,w
  2339  0222  00A7               	movwf	___ftpack@exp
  2340  0223  084B               	movf	___ftmul@sign,w
  2341  0224  00C3               	movwf	??___ftmul+1
  2342  0225  0843               	movf	??___ftmul+1,w
  2343  0226  00A8               	movwf	___ftpack@sign
  2344  0227  2497               	fcall	___ftpack
  2345  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2347  022A  0824               	movf	?___ftpack,w
  2348  022B  00BC               	movwf	?___ftmul
  2349  022C  0825               	movf	?___ftpack+1,w
  2350  022D  00BD               	movwf	?___ftmul+1
  2351  022E  0826               	movf	?___ftpack+2,w
  2352  022F  00BE               	movwf	?___ftmul+2
  2353  0230  0008               	return
  2354  0231                     __end_of___ftmul:	
  2355                           
  2356                           	psect	text11
  2357  0231                     __ptext11:	
  2358 ;; *************** function ___ftdiv *****************
  2359 ;; Defined at:
  2360 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  f2              3   12[BANK0 ] float 
  2363 ;;  f1              3   15[BANK0 ] float 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  f3              3   23[BANK0 ] float 
  2366 ;;  sign            1   27[BANK0 ] unsigned char 
  2367 ;;  exp             1   26[BANK0 ] unsigned char 
  2368 ;;  cntr            1   22[BANK0 ] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  3   12[BANK0 ] float 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2378 ;;      Params:         0       6       0       0
  2379 ;;      Locals:         0       6       0       0
  2380 ;;      Temps:          0       4       0       0
  2381 ;;      Totals:         0      16       0       0
  2382 ;;Total ram usage:       16 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    5
  2385 ;; This function calls:
  2386 ;;		___ftpack
  2387 ;; This function is called by:
  2388 ;;		_main
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function ___ftdiv
  2394  0231                     ___ftdiv:	
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2398  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2399  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2400  0233  082F               	movf	___ftdiv@f1,w
  2401  0234  00B2               	movwf	??___ftdiv
  2402  0235  0830               	movf	___ftdiv@f1+1,w
  2403  0236  00B3               	movwf	??___ftdiv+1
  2404  0237  0831               	movf	___ftdiv@f1+2,w
  2405  0238  00B4               	movwf	??___ftdiv+2
  2406  0239  1003               	clrc
  2407  023A  0D33               	rlf	??___ftdiv+1,w
  2408  023B  0D34               	rlf	??___ftdiv+2,w
  2409  023C  00B5               	movwf	??___ftdiv+3
  2410  023D  0835               	movf	??___ftdiv+3,w
  2411  023E  00BA               	movwf	___ftdiv@exp
  2412  023F  083A               	movf	___ftdiv@exp,w
  2413  0240  1D03               	btfss	3,2
  2414  0241  2A49               	goto	l1621
  2415  0242  3000               	movlw	0
  2416  0243  00AC               	movwf	?___ftdiv
  2417  0244  3000               	movlw	0
  2418  0245  00AD               	movwf	?___ftdiv+1
  2419  0246  3000               	movlw	0
  2420  0247  00AE               	movwf	?___ftdiv+2
  2421  0248  0008               	return
  2422  0249                     l1621:	
  2423  0249  082C               	movf	___ftdiv@f2,w
  2424  024A  00B2               	movwf	??___ftdiv
  2425  024B  082D               	movf	___ftdiv@f2+1,w
  2426  024C  00B3               	movwf	??___ftdiv+1
  2427  024D  082E               	movf	___ftdiv@f2+2,w
  2428  024E  00B4               	movwf	??___ftdiv+2
  2429  024F  1003               	clrc
  2430  0250  0D33               	rlf	??___ftdiv+1,w
  2431  0251  0D34               	rlf	??___ftdiv+2,w
  2432  0252  00B5               	movwf	??___ftdiv+3
  2433  0253  0835               	movf	??___ftdiv+3,w
  2434  0254  00BB               	movwf	___ftdiv@sign
  2435  0255  083B               	movf	___ftdiv@sign,w
  2436  0256  1D03               	btfss	3,2
  2437  0257  2A5F               	goto	l1627
  2438  0258  3000               	movlw	0
  2439  0259  00AC               	movwf	?___ftdiv
  2440  025A  3000               	movlw	0
  2441  025B  00AD               	movwf	?___ftdiv+1
  2442  025C  3000               	movlw	0
  2443  025D  00AE               	movwf	?___ftdiv+2
  2444  025E  0008               	return
  2445  025F                     l1627:	
  2446  025F  3000               	movlw	0
  2447  0260  00B7               	movwf	___ftdiv@f3
  2448  0261  3000               	movlw	0
  2449  0262  00B8               	movwf	___ftdiv@f3+1
  2450  0263  3000               	movlw	0
  2451  0264  00B9               	movwf	___ftdiv@f3+2
  2452  0265  3089               	movlw	137
  2453  0266  073B               	addwf	___ftdiv@sign,w
  2454  0267  00B2               	movwf	??___ftdiv
  2455  0268  0832               	movf	??___ftdiv,w
  2456  0269  02BA               	subwf	___ftdiv@exp,f
  2457  026A  082F               	movf	___ftdiv@f1,w
  2458  026B  00B2               	movwf	??___ftdiv
  2459  026C  0830               	movf	___ftdiv@f1+1,w
  2460  026D  00B3               	movwf	??___ftdiv+1
  2461  026E  0831               	movf	___ftdiv@f1+2,w
  2462  026F  00B4               	movwf	??___ftdiv+2
  2463  0270  3010               	movlw	16
  2464  0271                     u2415:	
  2465  0271  1003               	clrc
  2466  0272  0CB4               	rrf	??___ftdiv+2,f
  2467  0273  0CB3               	rrf	??___ftdiv+1,f
  2468  0274  0CB2               	rrf	??___ftdiv,f
  2469  0275  3EFF               	addlw	-1
  2470  0276  1D03               	skipz
  2471  0277  2A71               	goto	u2415
  2472  0278  0832               	movf	??___ftdiv,w
  2473  0279  00B5               	movwf	??___ftdiv+3
  2474  027A  0835               	movf	??___ftdiv+3,w
  2475  027B  00BB               	movwf	___ftdiv@sign
  2476  027C  082C               	movf	___ftdiv@f2,w
  2477  027D  00B2               	movwf	??___ftdiv
  2478  027E  082D               	movf	___ftdiv@f2+1,w
  2479  027F  00B3               	movwf	??___ftdiv+1
  2480  0280  082E               	movf	___ftdiv@f2+2,w
  2481  0281  00B4               	movwf	??___ftdiv+2
  2482  0282  3010               	movlw	16
  2483  0283                     u2425:	
  2484  0283  1003               	clrc
  2485  0284  0CB4               	rrf	??___ftdiv+2,f
  2486  0285  0CB3               	rrf	??___ftdiv+1,f
  2487  0286  0CB2               	rrf	??___ftdiv,f
  2488  0287  3EFF               	addlw	-1
  2489  0288  1D03               	skipz
  2490  0289  2A83               	goto	u2425
  2491  028A  0832               	movf	??___ftdiv,w
  2492  028B  00B5               	movwf	??___ftdiv+3
  2493  028C  0835               	movf	??___ftdiv+3,w
  2494  028D  06BB               	xorwf	___ftdiv@sign,f
  2495  028E  3080               	movlw	128
  2496  028F  00B2               	movwf	??___ftdiv
  2497  0290  0832               	movf	??___ftdiv,w
  2498  0291  05BB               	andwf	___ftdiv@sign,f
  2499  0292  17B0               	bsf	___ftdiv@f1+1,7
  2500  0293  30FF               	movlw	255
  2501  0294  05AF               	andwf	___ftdiv@f1,f
  2502  0295  30FF               	movlw	255
  2503  0296  05B0               	andwf	___ftdiv@f1+1,f
  2504  0297  3000               	movlw	0
  2505  0298  05B1               	andwf	___ftdiv@f1+2,f
  2506  0299  17AD               	bsf	___ftdiv@f2+1,7
  2507  029A  30FF               	movlw	255
  2508  029B  05AC               	andwf	___ftdiv@f2,f
  2509  029C  30FF               	movlw	255
  2510  029D  05AD               	andwf	___ftdiv@f2+1,f
  2511  029E  3000               	movlw	0
  2512  029F  05AE               	andwf	___ftdiv@f2+2,f
  2513  02A0  3018               	movlw	24
  2514  02A1  00B2               	movwf	??___ftdiv
  2515  02A2  0832               	movf	??___ftdiv,w
  2516  02A3  00B6               	movwf	___ftdiv@cntr
  2517  02A4                     l1641:	
  2518  02A4  3001               	movlw	1
  2519  02A5                     u2435:	
  2520  02A5  1003               	clrc
  2521  02A6  0DB7               	rlf	___ftdiv@f3,f
  2522  02A7  0DB8               	rlf	___ftdiv@f3+1,f
  2523  02A8  0DB9               	rlf	___ftdiv@f3+2,f
  2524  02A9  3EFF               	addlw	-1
  2525  02AA  1D03               	skipz
  2526  02AB  2AA5               	goto	u2435
  2527  02AC  082E               	movf	___ftdiv@f2+2,w
  2528  02AD  0231               	subwf	___ftdiv@f1+2,w
  2529  02AE  1D03               	skipz
  2530  02AF  2AB6               	goto	u2445
  2531  02B0  082D               	movf	___ftdiv@f2+1,w
  2532  02B1  0230               	subwf	___ftdiv@f1+1,w
  2533  02B2  1D03               	skipz
  2534  02B3  2AB6               	goto	u2445
  2535  02B4  082C               	movf	___ftdiv@f2,w
  2536  02B5  022F               	subwf	___ftdiv@f1,w
  2537  02B6                     u2445:	
  2538  02B6  1C03               	skipc
  2539  02B7  2AC3               	goto	l1649
  2540  02B8  082C               	movf	___ftdiv@f2,w
  2541  02B9  02AF               	subwf	___ftdiv@f1,f
  2542  02BA  082D               	movf	___ftdiv@f2+1,w
  2543  02BB  1C03               	skipc
  2544  02BC  0F2D               	incfsz	___ftdiv@f2+1,w
  2545  02BD  02B0               	subwf	___ftdiv@f1+1,f
  2546  02BE  082E               	movf	___ftdiv@f2+2,w
  2547  02BF  1C03               	skipc
  2548  02C0  0A2E               	incf	___ftdiv@f2+2,w
  2549  02C1  02B1               	subwf	___ftdiv@f1+2,f
  2550  02C2  1437               	bsf	___ftdiv@f3,0
  2551  02C3                     l1649:	
  2552  02C3  3001               	movlw	1
  2553  02C4                     u2455:	
  2554  02C4  1003               	clrc
  2555  02C5  0DAF               	rlf	___ftdiv@f1,f
  2556  02C6  0DB0               	rlf	___ftdiv@f1+1,f
  2557  02C7  0DB1               	rlf	___ftdiv@f1+2,f
  2558  02C8  3EFF               	addlw	-1
  2559  02C9  1D03               	skipz
  2560  02CA  2AC4               	goto	u2455
  2561  02CB  3001               	movlw	1
  2562  02CC  02B6               	subwf	___ftdiv@cntr,f
  2563  02CD  1D03               	btfss	3,2
  2564  02CE  2AA4               	goto	l1641
  2565  02CF  0837               	movf	___ftdiv@f3,w
  2566  02D0  00A4               	movwf	___ftpack@arg
  2567  02D1  0838               	movf	___ftdiv@f3+1,w
  2568  02D2  00A5               	movwf	___ftpack@arg+1
  2569  02D3  0839               	movf	___ftdiv@f3+2,w
  2570  02D4  00A6               	movwf	___ftpack@arg+2
  2571  02D5  083A               	movf	___ftdiv@exp,w
  2572  02D6  00B2               	movwf	??___ftdiv
  2573  02D7  0832               	movf	??___ftdiv,w
  2574  02D8  00A7               	movwf	___ftpack@exp
  2575  02D9  083B               	movf	___ftdiv@sign,w
  2576  02DA  00B3               	movwf	??___ftdiv+1
  2577  02DB  0833               	movf	??___ftdiv+1,w
  2578  02DC  00A8               	movwf	___ftpack@sign
  2579  02DD  2497               	fcall	___ftpack
  2580  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2581  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2582  02E0  0824               	movf	?___ftpack,w
  2583  02E1  00AC               	movwf	?___ftdiv
  2584  02E2  0825               	movf	?___ftpack+1,w
  2585  02E3  00AD               	movwf	?___ftdiv+1
  2586  02E4  0826               	movf	?___ftpack+2,w
  2587  02E5  00AE               	movwf	?___ftdiv+2
  2588  02E6  0008               	return
  2589  02E7                     __end_of___ftdiv:	
  2590                           
  2591                           	psect	text12
  2592  0497                     __ptext12:	
  2593 ;; *************** function ___ftpack *****************
  2594 ;; Defined at:
  2595 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  arg             3    4[BANK0 ] unsigned um
  2598 ;;  exp             1    7[BANK0 ] unsigned char 
  2599 ;;  sign            1    8[BANK0 ] unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  3    4[BANK0 ] float 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2611 ;;      Params:         0       5       0       0
  2612 ;;      Locals:         0       0       0       0
  2613 ;;      Temps:          0       3       0       0
  2614 ;;      Totals:         0       8       0       0
  2615 ;;Total ram usage:        8 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    4
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		___altoft
  2622 ;;		___ftadd
  2623 ;;		___ftdiv
  2624 ;;		___ftmul
  2625 ;;		___lwtoft
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function ___ftpack
  2631  0497                     ___ftpack:	
  2632                           
  2633                           ;incstack = 0
  2634                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2635  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0499  0827               	movf	___ftpack@exp,w
  2638  049A  1903               	btfsc	3,2
  2639  049B  2CA1               	goto	l1417
  2640  049C  0826               	movf	___ftpack@arg+2,w
  2641  049D  0425               	iorwf	___ftpack@arg+1,w
  2642  049E  0424               	iorwf	___ftpack@arg,w
  2643  049F  1D03               	skipz
  2644  04A0  2CB4               	goto	l1423
  2645  04A1                     l1417:	
  2646  04A1  3000               	movlw	0
  2647  04A2  00A4               	movwf	?___ftpack
  2648  04A3  3000               	movlw	0
  2649  04A4  00A5               	movwf	?___ftpack+1
  2650  04A5  3000               	movlw	0
  2651  04A6  00A6               	movwf	?___ftpack+2
  2652  04A7  0008               	return
  2653  04A8                     l1421:	
  2654  04A8  3001               	movlw	1
  2655  04A9  00A9               	movwf	??___ftpack
  2656  04AA  0829               	movf	??___ftpack,w
  2657  04AB  07A7               	addwf	___ftpack@exp,f
  2658  04AC  3001               	movlw	1
  2659  04AD                     u1895:	
  2660  04AD  1003               	clrc
  2661  04AE  0CA6               	rrf	___ftpack@arg+2,f
  2662  04AF  0CA5               	rrf	___ftpack@arg+1,f
  2663  04B0  0CA4               	rrf	___ftpack@arg,f
  2664  04B1  3EFF               	addlw	-1
  2665  04B2  1D03               	skipz
  2666  04B3  2CAD               	goto	u1895
  2667  04B4                     l1423:	
  2668  04B4  30FE               	movlw	254
  2669  04B5  0526               	andwf	___ftpack@arg+2,w
  2670  04B6  1903               	btfsc	3,2
  2671  04B7  2CCF               	goto	l336
  2672  04B8  2CA8               	goto	l1421
  2673  04B9                     l1425:	
  2674  04B9  3001               	movlw	1
  2675  04BA  00A9               	movwf	??___ftpack
  2676  04BB  0829               	movf	??___ftpack,w
  2677  04BC  07A7               	addwf	___ftpack@exp,f
  2678  04BD  3001               	movlw	1
  2679  04BE  07A4               	addwf	___ftpack@arg,f
  2680  04BF  3000               	movlw	0
  2681  04C0  1803               	skipnc
  2682  04C1  3001               	movlw	1
  2683  04C2  07A5               	addwf	___ftpack@arg+1,f
  2684  04C3  3000               	movlw	0
  2685  04C4  1803               	skipnc
  2686  04C5  3001               	movlw	1
  2687  04C6  07A6               	addwf	___ftpack@arg+2,f
  2688  04C7  3001               	movlw	1
  2689  04C8                     u1915:	
  2690  04C8  1003               	clrc
  2691  04C9  0CA6               	rrf	___ftpack@arg+2,f
  2692  04CA  0CA5               	rrf	___ftpack@arg+1,f
  2693  04CB  0CA4               	rrf	___ftpack@arg,f
  2694  04CC  3EFF               	addlw	-1
  2695  04CD  1D03               	skipz
  2696  04CE  2CC8               	goto	u1915
  2697  04CF                     l336:	
  2698  04CF  30FF               	movlw	255
  2699  04D0  0526               	andwf	___ftpack@arg+2,w
  2700  04D1  1903               	btfsc	3,2
  2701  04D2  2CDE               	goto	l1433
  2702  04D3  2CB9               	goto	l1425
  2703  04D4                     l1431:	
  2704  04D4  3001               	movlw	1
  2705  04D5  02A7               	subwf	___ftpack@exp,f
  2706  04D6  3001               	movlw	1
  2707  04D7                     u1935:	
  2708  04D7  1003               	clrc
  2709  04D8  0DA4               	rlf	___ftpack@arg,f
  2710  04D9  0DA5               	rlf	___ftpack@arg+1,f
  2711  04DA  0DA6               	rlf	___ftpack@arg+2,f
  2712  04DB  3EFF               	addlw	-1
  2713  04DC  1D03               	skipz
  2714  04DD  2CD7               	goto	u1935
  2715  04DE                     l1433:	
  2716  04DE  1BA5               	btfsc	___ftpack@arg+1,7
  2717  04DF  2CE4               	goto	l343
  2718  04E0  3002               	movlw	2
  2719  04E1  0227               	subwf	___ftpack@exp,w
  2720  04E2  1803               	skipnc
  2721  04E3  2CD4               	goto	l1431
  2722  04E4                     l343:	
  2723  04E4  1827               	btfsc	___ftpack@exp,0
  2724  04E5  2CEC               	goto	l344
  2725  04E6  30FF               	movlw	255
  2726  04E7  05A4               	andwf	___ftpack@arg,f
  2727  04E8  307F               	movlw	127
  2728  04E9  05A5               	andwf	___ftpack@arg+1,f
  2729  04EA  30FF               	movlw	255
  2730  04EB  05A6               	andwf	___ftpack@arg+2,f
  2731  04EC                     l344:	
  2732  04EC  1003               	clrc
  2733  04ED  0CA7               	rrf	___ftpack@exp,f
  2734  04EE  0827               	movf	___ftpack@exp,w
  2735  04EF  00A9               	movwf	??___ftpack
  2736  04F0  01AA               	clrf	??___ftpack+1
  2737  04F1  01AB               	clrf	??___ftpack+2
  2738  04F2  3010               	movlw	16
  2739  04F3                     u1975:	
  2740  04F3  1003               	clrc
  2741  04F4  0DA9               	rlf	??___ftpack,f
  2742  04F5  0DAA               	rlf	??___ftpack+1,f
  2743  04F6  0DAB               	rlf	??___ftpack+2,f
  2744  04F7  3EFF               	addlw	-1
  2745  04F8  1D03               	skipz
  2746  04F9  2CF3               	goto	u1975
  2747  04FA  0829               	movf	??___ftpack,w
  2748  04FB  04A4               	iorwf	___ftpack@arg,f
  2749  04FC  082A               	movf	??___ftpack+1,w
  2750  04FD  04A5               	iorwf	___ftpack@arg+1,f
  2751  04FE  082B               	movf	??___ftpack+2,w
  2752  04FF  04A6               	iorwf	___ftpack@arg+2,f
  2753  0500  0828               	movf	___ftpack@sign,w
  2754  0501  1903               	btfsc	3,2
  2755  0502  0008               	return
  2756  0503  17A6               	bsf	___ftpack@arg+2,7
  2757  0504  0008               	return
  2758  0505                     __end_of___ftpack:	
  2759                           
  2760                           	psect	text13
  2761  06AB                     __ptext13:	
  2762 ;; *************** function _isr *****************
  2763 ;; Defined at:
  2764 ;;		line 136 in file "main.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, pclath, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2778 ;;      Params:         0       0       0       0
  2779 ;;      Locals:         0       0       0       0
  2780 ;;      Temps:          0       4       0       0
  2781 ;;      Totals:         0       4       0       0
  2782 ;;Total ram usage:        4 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    3
  2785 ;; This function calls:
  2786 ;;		_advance_wave
  2787 ;; This function is called by:
  2788 ;;		Interrupt level 1
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           
  2793                           ;psect for function _isr
  2794  06AB                     _isr:	
  2795                           
  2796                           ;main.c: 137: if (TMR0IF)
  2797  06AB  1D0B               	btfss	11,2	;volatile
  2798  06AC  2EAF               	goto	i1l91
  2799                           
  2800                           ;main.c: 138: {
  2801                           ;main.c: 139: TMR0IF = 0;
  2802  06AD  110B               	bcf	11,2	;volatile
  2803                           
  2804                           ;main.c: 145: advance_wave();
  2805  06AE  2695               	fcall	_advance_wave
  2806  06AF                     i1l91:	
  2807  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  2808  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  2809  06B1  0823               	movf	??_isr+3,w
  2810  06B2  00FF               	movwf	127
  2811  06B3  0822               	movf	??_isr+2,w
  2812  06B4  008A               	movwf	10
  2813  06B5  0821               	movf	??_isr+1,w
  2814  06B6  0084               	movwf	4
  2815  06B7  0E20               	swapf	??_isr^0,w
  2816  06B8  0083               	movwf	3
  2817  06B9  0EFE               	swapf	126,f
  2818  06BA  0E7E               	swapf	126,w
  2819  06BB  0009               	retfie
  2820  06BC                     __end_of_isr:	
  2821                           
  2822                           	psect	intentry
  2823  0004                     __pintentry:	
  2824                           ;incstack = 0
  2825                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2826                           
  2827  0004                     interrupt_function:	
  2828  007E                     saved_w	set	btemp
  2829  0004  00FE               	movwf	btemp
  2830  0005  0E03               	swapf	3,w
  2831  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0008  00A0               	movwf	??_isr
  2834  0009  0804               	movf	4,w
  2835  000A  00A1               	movwf	??_isr+1
  2836  000B  080A               	movf	10,w
  2837  000C  00A2               	movwf	??_isr+2
  2838  000D  087F               	movf	btemp+1,w
  2839  000E  00A3               	movwf	??_isr+3
  2840  000F  2EAB               	ljmp	_isr
  2841                           
  2842                           	psect	text14
  2843  0695                     __ptext14:	
  2844 ;; *************** function _advance_wave *****************
  2845 ;; Defined at:
  2846 ;;		line 115 in file "main.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2860 ;;      Params:         0       0       0       0
  2861 ;;      Locals:         0       0       0       0
  2862 ;;      Temps:          2       0       0       0
  2863 ;;      Totals:         2       0       0       0
  2864 ;;Total ram usage:        2 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    2
  2867 ;; This function calls:
  2868 ;;		_xorgen
  2869 ;;		i1_update_duty
  2870 ;; This function is called by:
  2871 ;;		_isr
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           
  2876                           ;psect for function _advance_wave
  2877  0695                     _advance_wave:	
  2878                           
  2879                           ;main.c: 127: update_duty(duty >> 4);
  2880                           
  2881                           ;incstack = 0
  2882                           ; Regs used in _advance_wave: [wreg+status,2+status,0+pclath+cstack]
  2883  0695  1683               	bsf	3,5	;RP0=1, select bank1
  2884  0696  1303               	bcf	3,6	;RP1=0, select bank1
  2885  0697  0E4B               	swapf	_duty^(0+128),w
  2886  0698  390F               	andlw	15
  2887  0699  00F0               	movwf	i1update_duty@value
  2888  069A  0E4C               	swapf	(_duty+1)^(0+128),w
  2889  069B  39F0               	andlw	240
  2890  069C  04F0               	iorwf	i1update_duty@value,f
  2891  069D  0E4C               	swapf	(_duty+1)^(0+128),w
  2892  069E  390F               	andlw	15
  2893  069F  00F1               	movwf	i1update_duty@value+1
  2894  06A0  265C               	fcall	i1_update_duty
  2895                           
  2896                           ;main.c: 133: duty = xorgen();
  2897  06A1  2505               	fcall	_xorgen
  2898  06A2  00FA               	movwf	??_advance_wave
  2899  06A3  01FB               	clrf	??_advance_wave+1
  2900  06A4  087A               	movf	??_advance_wave,w
  2901  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  2902  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  2903  06A7  00CB               	movwf	_duty^(0+128)
  2904  06A8  087B               	movf	??_advance_wave+1,w
  2905  06A9  00CC               	movwf	(_duty+1)^(0+128)
  2906  06AA  0008               	return
  2907  06AB                     __end_of_advance_wave:	
  2908                           
  2909                           	psect	text15
  2910  065C                     __ptext15:	
  2911 ;; *************** function i1_update_duty *****************
  2912 ;; Defined at:
  2913 ;;		line 27 in file "main.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  value           2    0[COMMON] unsigned int 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2927 ;;      Params:         2       0       0       0
  2928 ;;      Locals:         0       0       0       0
  2929 ;;      Temps:          0       0       0       0
  2930 ;;      Totals:         2       0       0       0
  2931 ;;Total ram usage:        2 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_advance_wave
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           
  2941                           ;psect for function i1_update_duty
  2942  065C                     i1_update_duty:	
  2943                           
  2944                           ;main.c: 31: CCP1Y = value;
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in i1_update_duty: [wreg+status,2+status,0]
  2948  065C  1C70               	btfss	i1update_duty@value,0
  2949  065D  2E62               	goto	u152_20
  2950  065E  1283               	bcf	3,5	;RP0=0, select bank0
  2951  065F  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0660  1617               	bsf	23,4	;volatile
  2953  0661  2E65               	goto	i1l1243
  2954  0662                     u152_20:	
  2955  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2956  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2957  0664  1217               	bcf	23,4	;volatile
  2958  0665                     i1l1243:	
  2959                           
  2960                           ;main.c: 34: value >>= 1;
  2961  0665  3001               	movlw	1
  2962  0666                     u154_25:	
  2963  0666  1003               	clrc
  2964  0667  0CF1               	rrf	i1update_duty@value+1,f
  2965  0668  0CF0               	rrf	i1update_duty@value,f
  2966  0669  3EFF               	addlw	-1
  2967  066A  1D03               	skipz
  2968  066B  2E66               	goto	u154_25
  2969                           
  2970                           ;main.c: 35: CCP1X = value;
  2971  066C  1C70               	btfss	i1update_duty@value,0
  2972  066D  2E72               	goto	u155_20
  2973  066E  1283               	bcf	3,5	;RP0=0, select bank0
  2974  066F  1303               	bcf	3,6	;RP1=0, select bank0
  2975  0670  1697               	bsf	23,5	;volatile
  2976  0671  2E75               	goto	u156_24
  2977  0672                     u155_20:	
  2978  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2979  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2980  0674  1297               	bcf	23,5	;volatile
  2981  0675                     u156_24:	
  2982                           
  2983                           ;main.c: 38: value >>= 1;
  2984  0675  3001               	movlw	1
  2985  0676                     u157_25:	
  2986  0676  1003               	clrc
  2987  0677  0CF1               	rrf	i1update_duty@value+1,f
  2988  0678  0CF0               	rrf	i1update_duty@value,f
  2989  0679  3EFF               	addlw	-1
  2990  067A  1D03               	skipz
  2991  067B  2E76               	goto	u157_25
  2992                           
  2993                           ;main.c: 39: CCPR1L = value;
  2994  067C  0870               	movf	i1update_duty@value,w
  2995  067D  0095               	movwf	21	;volatile
  2996  067E  0008               	return
  2997  067F                     __end_ofi1_update_duty:	
  2998                           
  2999                           	psect	text16
  3000  0505                     __ptext16:	
  3001 ;; *************** function _xorgen *****************
  3002 ;; Defined at:
  3003 ;;		line 97 in file "main.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  t               1    9[COMMON] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      unsigned char 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, pclath, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3017 ;;      Params:         0       0       0       0
  3018 ;;      Locals:         2       0       0       0
  3019 ;;      Temps:          4       0       0       0
  3020 ;;      Totals:         6       0       0       0
  3021 ;;Total ram usage:        6 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    1
  3024 ;; This function calls:
  3025 ;;		___bmul
  3026 ;; This function is called by:
  3027 ;;		_advance_wave
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function _xorgen
  3033  0505                     _xorgen:	
  3034                           
  3035                           ;main.c: 98: static unsigned char xx = 143;
  3036                           ;main.c: 99: static unsigned char x = 101;
  3037                           ;main.c: 100: static unsigned char y = 43;
  3038                           ;main.c: 101: static unsigned char z = 195;
  3039                           ;main.c: 102: static unsigned char w = 244;
  3040                           ;main.c: 103: static unsigned char v = 93;
  3041                           ;main.c: 104: static unsigned char u = 112;
  3042                           ;main.c: 105: static unsigned char s = 145;
  3043                           ;main.c: 107: unsigned char t = (x ^ (x >> 3));
  3044                           
  3045                           ;incstack = 0
  3046                           ; Regs used in _xorgen: [wreg+status,2+status,0+pclath+cstack]
  3047  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0507  0869               	movf	xorgen@x,w
  3050  0508  00F4               	movwf	??_xorgen
  3051  0509  3003               	movlw	3
  3052  050A                     u122_25:	
  3053  050A  1003               	clrc
  3054  050B  0CF4               	rrf	??_xorgen,f
  3055  050C  3EFF               	addlw	-1
  3056  050D  1D03               	skipz
  3057  050E  2D0A               	goto	u122_25
  3058  050F  0874               	movf	??_xorgen,w
  3059  0510  0669               	xorwf	xorgen@x,w
  3060  0511  00F5               	movwf	??_xorgen+1
  3061  0512  0875               	movf	??_xorgen+1,w
  3062  0513  00F9               	movwf	xorgen@t
  3063                           
  3064                           ;main.c: 108: x = y; y = z; z = w; w = v; v = u; u = s; s = xx;
  3065  0514  087D               	movf	xorgen@y,w
  3066  0515  00F4               	movwf	??_xorgen
  3067  0516  0874               	movf	??_xorgen,w
  3068  0517  00E9               	movwf	xorgen@x
  3069  0518  086A               	movf	xorgen@z,w
  3070  0519  00F4               	movwf	??_xorgen
  3071  051A  0874               	movf	??_xorgen,w
  3072  051B  00FD               	movwf	xorgen@y
  3073  051C  0868               	movf	xorgen@w,w
  3074  051D  00F4               	movwf	??_xorgen
  3075  051E  0874               	movf	??_xorgen,w
  3076  051F  00EA               	movwf	xorgen@z
  3077  0520  0867               	movf	xorgen@v,w
  3078  0521  00F4               	movwf	??_xorgen
  3079  0522  0874               	movf	??_xorgen,w
  3080  0523  00E8               	movwf	xorgen@w
  3081  0524  0866               	movf	xorgen@u,w
  3082  0525  00F4               	movwf	??_xorgen
  3083  0526  0874               	movf	??_xorgen,w
  3084  0527  00E7               	movwf	xorgen@v
  3085  0528  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0529  1303               	bcf	3,6	;RP1=0, select bank1
  3087  052A  0848               	movf	xorgen@s^(0+128),w
  3088  052B  00F4               	movwf	??_xorgen
  3089  052C  0874               	movf	??_xorgen,w
  3090  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3091  052E  1303               	bcf	3,6	;RP1=0, select bank0
  3092  052F  00E6               	movwf	xorgen@u
  3093  0530  087C               	movf	xorgen@xx,w
  3094  0531  00F4               	movwf	??_xorgen
  3095  0532  0874               	movf	??_xorgen,w
  3096  0533  1683               	bsf	3,5	;RP0=1, select bank1
  3097  0534  1303               	bcf	3,6	;RP1=0, select bank1
  3098  0535  00C8               	movwf	xorgen@s^(0+128)
  3099                           
  3100                           ;main.c: 110: xx = (xx ^ (xx << 2)) ^ (t ^ (t << 4));
  3101  0536  0879               	movf	xorgen@t,w
  3102  0537  00F4               	movwf	??_xorgen
  3103  0538  3004               	movlw	4
  3104  0539                     u123_25:	
  3105  0539  1003               	clrc
  3106  053A  0DF4               	rlf	??_xorgen,f
  3107  053B  3EFF               	addlw	-1
  3108  053C  1D03               	skipz
  3109  053D  2D39               	goto	u123_25
  3110  053E  0879               	movf	xorgen@t,w
  3111  053F  0674               	xorwf	??_xorgen,w
  3112  0540  00F5               	movwf	??_xorgen+1
  3113  0541  087C               	movf	xorgen@xx,w
  3114  0542  00F6               	movwf	??_xorgen+2
  3115  0543  3001               	movlw	1
  3116  0544                     u124_25:	
  3117  0544  1003               	clrc
  3118  0545  0DF6               	rlf	??_xorgen+2,f
  3119  0546  3EFF               	addlw	-1
  3120  0547  1D03               	skipz
  3121  0548  2D44               	goto	u124_25
  3122  0549  1003               	clrc
  3123  054A  0D76               	rlf	??_xorgen+2,w
  3124  054B  0675               	xorwf	??_xorgen+1,w
  3125  054C  067C               	xorwf	xorgen@xx,w
  3126  054D  00F7               	movwf	??_xorgen+3
  3127  054E  0877               	movf	??_xorgen+3,w
  3128  054F  00FC               	movwf	xorgen@xx
  3129                           
  3130                           ;main.c: 112: return (y * y + 1) * xx;
  3131  0550  087D               	movf	xorgen@y,w
  3132  0551  00F4               	movwf	??_xorgen
  3133  0552  0874               	movf	??_xorgen,w
  3134  0553  00F0               	movwf	___bmul@multiplicand
  3135  0554  087D               	movf	xorgen@y,w
  3136  0555  26BC               	fcall	___bmul
  3137  0556  3E01               	addlw	1
  3138  0557  00F5               	movwf	??_xorgen+1
  3139  0558  0875               	movf	??_xorgen+1,w
  3140  0559  00F8               	movwf	_xorgen$514
  3141                           
  3142                           ;main.c: 112: return (y * y + 1) * xx;
  3143  055A  087C               	movf	xorgen@xx,w
  3144  055B  00F4               	movwf	??_xorgen
  3145  055C  0874               	movf	??_xorgen,w
  3146  055D  00F0               	movwf	___bmul@multiplicand
  3147  055E  0878               	movf	_xorgen$514,w
  3148  055F  26BC               	fcall	___bmul
  3149  0560  0008               	return
  3150  0561                     __end_of_xorgen:	
  3151                           
  3152                           	psect	text17
  3153  06BC                     __ptext17:	
  3154 ;; *************** function ___bmul *****************
  3155 ;; Defined at:
  3156 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  multiplier      1    wreg     unsigned char 
  3159 ;;  multiplicand    1    0[COMMON] unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  multiplier      1    3[COMMON] unsigned char 
  3162 ;;  product         1    2[COMMON] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      unsigned char 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3172 ;;      Params:         1       0       0       0
  3173 ;;      Locals:         2       0       0       0
  3174 ;;      Temps:          1       0       0       0
  3175 ;;      Totals:         4       0       0       0
  3176 ;;Total ram usage:        4 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_xorgen
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function ___bmul
  3187  06BC                     ___bmul:	
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3191                           ;___bmul@multiplier stored from wreg
  3192  06BC  00F3               	movwf	___bmul@multiplier
  3193  06BD  01F2               	clrf	___bmul@product
  3194  06BE                     i1l1035:	
  3195  06BE  1C73               	btfss	___bmul@multiplier,0
  3196  06BF  2EC4               	goto	i1l1039
  3197  06C0  0870               	movf	___bmul@multiplicand,w
  3198  06C1  00F1               	movwf	??___bmul
  3199  06C2  0871               	movf	??___bmul,w
  3200  06C3  07F2               	addwf	___bmul@product,f
  3201  06C4                     i1l1039:	
  3202  06C4  1003               	clrc
  3203  06C5  0DF0               	rlf	___bmul@multiplicand,f
  3204  06C6  1003               	clrc
  3205  06C7  0CF3               	rrf	___bmul@multiplier,f
  3206  06C8  0873               	movf	___bmul@multiplier,w
  3207  06C9  1D03               	btfss	3,2
  3208  06CA  2EBE               	goto	i1l1035
  3209  06CB  0872               	movf	___bmul@product,w
  3210  06CC  0008               	return
  3211  06CD                     __end_of___bmul:	
  3212  007E                     btemp	set	126	;btemp
  3213  007E                     wtemp	set	126
  3214  007E                     wtemp0	set	126
  3215  0080                     wtemp1	set	128
  3216  0082                     wtemp2	set	130
  3217  0084                     wtemp3	set	132
  3218  0086                     wtemp4	set	134
  3219  0088                     wtemp5	set	136
  3220  007F                     wtemp6	set	127
  3221  007E                     ttemp	set	126
  3222  007E                     ttemp0	set	126
  3223  0081                     ttemp1	set	129
  3224  0084                     ttemp2	set	132
  3225  0087                     ttemp3	set	135
  3226  007F                     ttemp4	set	127
  3227  007E                     ltemp	set	126
  3228  007E                     ltemp0	set	126
  3229  0082                     ltemp1	set	130
  3230  0086                     ltemp2	set	134
  3231  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     70      75
    BANK1            80     30      47
    BANK2            80      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK1[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_advance_wave
    _advance_wave->_xorgen
    _xorgen->___bmul

Critical Paths under _main in BANK0

    _round->_trunc
    _trunc->___altoft
    ___fttol->___ftmul
    ___altoft->___fttol
    ___ftneg->_trunc
    ___ftadd->_trunc
    ___lwtoft->___ftpack
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_round
    _round->___ftadd
    ___ftneg->_trunc
    ___ftadd->___ftneg

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16423
                                             27 BANK1      3     3      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                              _round
                        _update_duty
 ---------------------------------------------------------------------------------
 (1) _update_duty                                          2     0      2     148
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _round                                                6     3      3    7832
                                             21 BANK1      6     3      3
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg
                           ___lwtoft (ARG)
                              _trunc
 ---------------------------------------------------------------------------------
 (2) _trunc                                                9     6      3    3765
                                             66 BANK0      4     1      3
                                              0 BANK1      5     5      0
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     428
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     566
                                             44 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___altoft                                             8     4      4    2397
                                             58 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     138
                                              5 BANK1      3     0      3
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3703
                                              8 BANK1     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2289
                                             12 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2876
                                             28 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2678
                                             12 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2128
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0     360
                                              0 BANK0      4     4      0
                       _advance_wave
 ---------------------------------------------------------------------------------
 (6) _advance_wave                                         2     2      0     360
                                             10 COMMON     2     2      0
                             _xorgen
                      i1_update_duty
 ---------------------------------------------------------------------------------
 (7) i1_update_duty                                        2     0      2      94
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _xorgen                                               6     6      0     266
                                              4 COMMON     6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (8) ___bmul                                               4     3      1     198
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftpack
   ___ftmul
     ___ftdiv (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _round
     ___ftadd
       ___ftneg (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___fttol
             ___ftdiv (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _frexp
       ___ftpack (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___fttol
           ___ftdiv (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___ftdiv (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___fttol
           ___ftdiv (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _frexp
     ___lwtoft (ARG)
       ___ftpack
     _trunc (ARG)
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       _frexp
   _update_duty

 _isr (ROOT)
   _advance_wave
     _xorgen
       ___bmul
     i1_update_duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1E      2F       5       58.8%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     46      4B       3       93.8%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      88      10        0.0%
ABS                  0      0      88       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Mar 27 20:02:58 2016

            _update_duty 0637             ___altoft@exp 0060           ___bmul@product 0072  
          ___altoft@sign 0061                       l60 0392             ___ftadd@exp1 00B4  
           ___ftadd@exp2 00B3             ___ftadd@sign 00B2                      l343 04E4  
                    l344 04EC                      l336 04CF                      l427 0407  
                    l367 00E5                      _GIE 005F                      _PR2 0092  
                    _isr 06AB                      fsr0 0004                      indf 0000  
   __end_of_advance_wave 06AB             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
           ___ftdiv@cntr 0036             ___ftdiv@sign 003B                     l1251 0642  
                   l1421 04A8                     l1431 04D4                     l1423 04B4  
                   l1433 04DE                     l1425 04B9                     l1417 04A1  
                   l1621 0249                     l1525 0066                     l1509 0609  
                   l1535 007C                     l1455 05D1                     l1641 02A4  
                   l1553 00AB                     l1529 006D                     l1457 05E3  
                   l1627 025F                     l1571 00F7                     l1555 00B7  
                   l1547 0096                     l1467 03AD                     l1565 00D5  
                   l1557 00BC                     l1493 03FC                     l1485 03DF  
                   l1663 0178                     l1575 0109                     l1567 00E1  
                   l1559 00C0                     l1495 040A                     l1487 03EF  
                   l1649 02C3                     l1681 01CD                     l1585 012C  
                   l1499 0418                     l1693 01F5                     l1685 01DD  
                   l1669 018E                     l1597 057B                     l1697 0205  
                   ?_isr 0070                     _T0CS 040D                     u2005 05D6  
                   u2035 03B4                     u2225 0097                     u2065 03E0  
                   u1610 064F                     u2315 00D6                     u1605 0643  
                   u2415 0271                     u2255 00AC                     u2095 03FE  
                   u1624 0652                     u2425 0283                     u2505 01AC  
                   u2435 02A5                     u1635 0653                     u1580 063F  
                   u2445 02B6                     u2285 00C1                     u2455 02C4  
                   u2535 01DE                     u2545 01E6                     u1915 04C8  
                   u1935 04D7                     u2495 019A                     u2585 0206  
                   u2595 020E                     u1975 04F3                     u1895 04AD  
                   i1l91 06AF                     _main 02E7                     _freq 00BE  
           ___ftpack@arg 0024                     _duty 00CB             ___ftpack@exp 0027  
                   btemp 007E                     ltemp 007E                     start 0010  
                   ttemp 007E                     wtemp 007E        ___bmul@multiplier 0073  
           ___ftmul@cntr 004A             ___ftmul@sign 004B    __end_ofi1_update_duty 067F  
           ___fttol@exp1 0059             ___fttol@lval 0055                    ??_isr 0020  
                  ?_main 0070                    _CCP1X 00BD                    _CCP1Y 00BC  
        __end_of___ftadd 0160            __CFG_WDTE$OFF 0000          __end_of___ftdiv 02E7  
        __end_of___ftneg 06E2          __end_of___ftmul 0231          __end_of___fttol 0421  
                  _IRCF0 047C                    _IRCF1 047D                    _IRCF2 047E  
                  _PORTA 0005                    _TRISA 0085                    _TRISB 0086  
         __CFG_CCPMX$RB3 0000            __CFG_PWRTE$ON 0000                    _delta 00C9  
                  _frexp 05FB                    _errno 00CD            ___ftpack@sign 0028  
                  _round 0421                    _trunc 0561                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0011  
           __end_of_main 0393                   ??_main 0066            ___fttol@sign1 0054  
                 _ADCON1 009F                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 ?_frexp 0024         __end_of___altoft 05FB                   _CCPR1L 0015  
       __end_of___ftpack 0505                   ?_round 00B5                   ?_trunc 0062  
                 i1l1035 06BE                   i1l1039 06C4                   i1l1243 0665  
                 u122_25 050A                   u123_25 0539                   u124_25 0544  
                 u152_20 0662                   u154_25 0666                   u155_20 0672  
                 u156_24 0675                   u157_25 0676         __end_of___lwtoft 0695  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TMR2ON 0092  
                 ___bmul 06BC                ??___ftadd 00AE                ??___ftdiv 0032  
              ??___ftneg 0066                ??___ftmul 0042                ??___fttol 0050  
  __size_of_advance_wave 0016                   _xorgen 0505    ___ftmul@f3_as_product 0047  
           __pdataCOMMON 007C                   saved_w 007E                   round@f 00B8  
                 round@x 00B5                   trunc@i 00A0                   trunc@x 0062  
__end_of__initialization 003B               ___altoft@c 005A               ___ftadd@f1 00A8  
             ___ftadd@f2 00AB               ___ftdiv@f1 002F               ___ftdiv@f2 002C  
             ___ftdiv@f3 0037               ___ftneg@f1 00A5      ___bmul@multiplicand 0070  
           _advance_wave 0695               ___ftmul@f1 003C               ___ftmul@f2 003F  
             ___fttol@f1 004C             ?_update_duty 0024           __pcstackCOMMON 0070  
           __pidataBANK0 06E2             __pidataBANK1 06CD            __end_of_frexp 0637  
          __end_of_round 0497            __end_of_trunc 05BB               ___lwtoft@c 002C  
                ??_frexp 0028                  ??_round 0066                  ??_trunc 0065  
             __pbssBANK1 00CD         update_duty@value 0024               __pmaintext 02E7  
                ?___bmul 0070               __pintentry 0004                ?___altoft 005A  
              ?___ftpack 0024                  _T2CKPS0 0090                  _T2CKPS1 0091  
              ?___lwtoft 002C                  ?_xorgen 0070          __size_of___bmul 0011  
                ___ftadd 003D                  ___ftdiv 0231                  ___ftneg 06D8  
                ___ftmul 0160                  ___fttol 0393               ??___altoft 005E  
             ??___ftpack 0029                  __ptext1 0637                  __ptext2 0421  
                __ptext3 0561                  __ptext4 05FB                  __ptext5 0393  
                __ptext6 05BB                  __ptext7 06D8                  __ptext8 003D  
                __ptext9 067F               ??___lwtoft 002F          __size_of_xorgen 005C  
           __size_of_isr 0011   __size_ofi1_update_duty 0023     end_of_initialization 003B  
   __size_of_update_duty 0025                  xorgen@s 00C8                  xorgen@t 0079  
                xorgen@u 0066                  xorgen@v 0067                  xorgen@w 0068  
                xorgen@x 0069                  xorgen@y 007D                  xorgen@z 006A  
     i1update_duty@value 0070              ___ftdiv@exp 003A              ___ftmul@exp 0046  
             _xorgen$514 0078            i1_update_duty 065C           __end_of___bmul 06CD  
          __pidataCOMMON 06E7           __end_of_xorgen 0561      start_initialization 0011  
            __end_of_isr 06BC               frexp@value 0024           ?i1_update_duty 0070  
               ??___bmul 0071              __pdataBANK0 0066              __pdataBANK1 00BE  
               ??_xorgen 0074        __size_of___altoft 0040        __size_of___ftpack 006E  
              ___latbits 0000        __size_of___lwtoft 0016            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                __pnvBANK1 00C9                 ?___ftadd 00A8  
               ?___ftdiv 002C                 ?___ftneg 00A5                 ?___ftmul 003C  
               ?___fttol 004C           __size_of_frexp 003C           __size_of_round 0076  
         __size_of_trunc 005A                _duty_max2 00C6        interrupt_function 0004  
        ??i1_update_duty 0072                frexp@eptr 0027            ?_advance_wave 0070  
          ??_update_duty 0026         __size_of___ftadd 0123         __size_of___ftdiv 00B6  
       __size_of___ftneg 000A                 ___altoft 05BB         __size_of___ftmul 00D1  
       __size_of___fttol 008E                 ___ftpack 0497                 ___lwtoft 067F  
               _main$513 00BB                 __ptext10 0160                 __ptext11 0231  
               __ptext12 0497                 __ptext13 06AB                 __ptext14 0695  
               __ptext15 065C                 __ptext16 0505                 __ptext17 06BC  
             trunc@expon 00A3            __size_of_main 00AC                 _duty_max 00C4  
         ??_advance_wave 007A      __end_of_update_duty 065C              _sample_rate 00C1  
               intlevel1 0000                 xorgen@xx 007C  
